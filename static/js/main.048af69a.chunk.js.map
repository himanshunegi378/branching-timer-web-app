{"version":3,"sources":["component/timer/style.module.css","hooks/alarm.mp3","component/timer/Timer.jsx","component/timerCard/playButton.jsx","component/timerCard/loopButton.jsx","component/timerCard/stopButton.jsx","lib/countdownTimer.ts","lib/event.js","utils/notification.js","hooks/useSoundPlayer.tsx","utils/localStorage.ts","hooks/useTimerStore.tsx","hooks/useTimerGroup.tsx","hooks/useTimerCards.tsx","component/timerCard/TimerCard.jsx","App.jsx","contexts/SoundPlayerContext.tsx","providers/SoundPlayerProvider.tsx","serviceWorker.js","index.js"],"names":["module","exports","Timer","props","onNameChange","onTimeChange","onDelete","id","name","time","active","useState","mins","setMins","secs","setSecs","editTitle","setEditTitle","titleBgColor","setTitleBgColor","useEffect","minutes","parseInt","seconds","className","style","timer","onClick","onSubmit","event","preventDefault","currentTarget","title","value","onBlur","autoFocus","autoComplete","type","Button","size","console","log","width","placeholder","onChange","e","target","PlayButton","isPlaying","fill","height","version","xmlns","x","y","viewBox","d","LoopButton","looping","enableBackground","StopButton","isStopped","CountdownTimer","intervalId","this","stop","diff","start","Date","now","trigger","window","setInterval","clearInterval","events","numEventNames","i","arguments","length","arg","TypeError","Error","Eventjs","ReferenceError","checkEventName","eventName","on","listener","indexOf","push","off","iEventName","hasOwnProperty","currListener","currHandlerIndex","splice","argumentList","listeners","errors","j","lis","apply","error","newError","showNotification","Notification","permission","requestPermission","then","alert","useSoundPlayer","playerId","setPlayerId","playerRef","useRef","play","sound","current","Howl","src","handleId","setTimeout","pause","ls","key","stringifiedData","localStorage","getItem","JSON","parse","data","setItem","stringify","removeItem","useTimerStore","timerStore","setTimerStore","saveTimer","init","idList","forEach","loadTimer","addTimer","uuidv1","newTimer","getTimer","deleteTimer","newTimerStore","updateTimer","opts","useTimerGroup","timers","timerGroupStore","setTimerGroupStore","addTimerInGroup","newTimerGroups","deleteTimerFromGroup","timerId","newTimerGroupsStore","newTimerList","filter","_timerId","deleteTimerGroup","changeGroupName","newName","savedTimerGroupStoreData","timersList","defaultSound","require","TimerCard","timerCardId","timerGroup","status","timerCardData","setTimerCardData","currentTimerId","remainingTime","runningTimer","setRunningTimer","countdownTimerRef","onTimerFinished","setOnTimerFinished","runningTimerRef","timerCardDataRef","onPageHide","addEventListener","removeEventListener","onTick","runningTimerData","countdownTimer","timerList","indexofFinishedTimer","nextTimer","playCard","stringifiedTimerCardData","parsedTimerCardData","stringifiedRunningTimerData","parsedRunningTimerData","timerData","pausecard","stopCard","toggleLooping","newTimerCardData","useTimerCard","timerCard","Card","minWidth","maxWidth","Body","Title","state","map","newTime","App","timerCardsList","setTimerCardsList","savedTimerCardList","document","body","classList","remove","add","prevTimerCardList","alignItems","SoundPlayerContext","React","createContext","SoundPlayerProvider","children","Provider","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","waitUntil","caches","keys","cacheNames","Promise","all","cacheName","delete","fetch","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.048af69a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"style_timer__3Cdze\"};","module.exports = __webpack_public_path__ + \"static/media/alarm.61eb5a40.mp3\";","import React, { useState, useEffect } from 'react'\nimport style from './style.module.css'\nimport { Button } from 'react-bootstrap'\n\nfunction Timer(props) {\n  const { onNameChange, onTimeChange, onDelete, id, name, time, active } = props\n\n  const [mins, setMins] = useState()\n  const [secs, setSecs] = useState()\n  const [editTitle, setEditTitle] = useState(() => false)\n  const [titleBgColor, setTitleBgColor] = useState('alert-info')\n\n\n  useEffect(() => {\n    if (!time) return\n    const minutes = parseInt(time / 60)\n    const seconds = parseInt(time % 60)\n    setMins((minutes))\n    setSecs((seconds))\n  }, [time])\n\n  useEffect(() => {\n    if (active) {\n      setTitleBgColor('alert-danger')\n    } else {\n      setTitleBgColor('alert-info')\n    }\n  }, [active])\n\n  return (\n    <div id={props.id} className={`my-1 ${style.timer}`}>\n      <div className={`${titleBgColor} d-flex justify-content-between`}>\n        <div className='pl-2' onClick={() => setEditTitle(true)} >\n          {editTitle ? <form onSubmit={(event) => {\n            event.preventDefault()\n            setEditTitle(false)\n            onNameChange(event.currentTarget.title.value)\n          }}\n            onBlur={(event) => {\n              onNameChange(event.currentTarget.title.value)\n              setEditTitle(false)\n            }}\n          ><input autoFocus autoComplete={'off'} type='text' name='title' /></form> : name}\n        </div>\n        <div >\n          <Button size='sm' className='btn-danger' onClick={() => {\n            onDelete(id)\n          }}>x\n          </Button>\n        </div>\n      </div>\n      {/* <div className={messageBgColor}>{TimerDetail.message}</div> */}\n      <form onSubmit={event => {\n        event.preventDefault()\n        const minutes = parseInt(event.currentTarget.mins.value)\n        const seconds = parseInt(event.currentTarget.secs.value)\n        let time = 0\n        if (minutes) time += (minutes * 60)\n        if (seconds) time += seconds\n        onTimeChange(time)\n      }}\n        onBlur={event => {\n          const minutes = parseInt(event.currentTarget.mins.value)\n          const seconds = parseInt(event.currentTarget.secs.value)\n          let time = 0\n          console.log(minutes, seconds)\n          if (minutes) time += (minutes * 60)\n          if (seconds) time += seconds\n          console.log(time)\n          onTimeChange(time)\n        }}\n        className='text-center'>\n        <input name='mins' style={{ width: '3em' }} type='number' placeholder='m' onChange={e => setMins(e.target.value)} value={mins}\n        />\n        <span className='mx-1'>:</span>\n        <input name='secs' style={{ width: '3em' }} type='number' placeholder='s' onChange={e => setSecs(e.target.value)} value={secs} />\n\n      </form>\n    </div>\n  )\n}\n\nexport default Timer\n","import React from 'react'\n\nfunction PlayButton(props) {\n    const { isPlaying = false, onChange = () => { } } = props\n\n\n    return (\n        <div onClick={() => { onChange(!isPlaying) }}>\n            {isPlaying\n                ?\n                <svg style={{ fill: '#007bff' }} className='w-100 h-auto' height=\"512\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                    viewBox=\"0 0 477.867 477.867\" >\n                    <g>\n                        <g>\n                            <path d=\"M187.733,0H51.2c-9.426,0-17.067,7.641-17.067,17.067V460.8c0,9.426,7.641,17.067,17.067,17.067h136.533\n\t\t\tc9.426,0,17.067-7.641,17.067-17.067V17.067C204.8,7.641,197.159,0,187.733,0z M170.667,443.733h-102.4v-409.6h102.4V443.733z\"/>\n                        </g>\n                    </g>\n                    <g>\n                        <g>\n                            <path d=\"M426.667,0H290.133c-9.426,0-17.067,7.641-17.067,17.067V460.8c0,9.426,7.641,17.067,17.067,17.067h136.533\n\t\t\tc9.426,0,17.067-7.641,17.067-17.067V17.067C443.733,7.641,436.092,0,426.667,0z M409.6,443.733H307.2v-409.6h102.4V443.733z\"/>\n                        </g>\n                    </g>\n                </svg>\n                :\n                <svg style={{ fill: '#007bff' }} className='w-100 h-auto' height=\"512\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                    viewBox=\"0 0 477.886 477.886\">\n                    <g>\n                        <g>\n                            <path d=\"M476.091,231.332c-1.654-3.318-4.343-6.008-7.662-7.662L24.695,1.804C16.264-2.41,6.013,1.01,1.8,9.442\n\t\t\tc-1.185,2.371-1.801,4.986-1.8,7.637v443.733c-0.004,9.426,7.633,17.07,17.059,17.075c2.651,0.001,5.266-0.615,7.637-1.8\n\t\t\tL468.429,254.22C476.865,250.015,480.295,239.768,476.091,231.332z M34.133,433.198V44.692l388.506,194.253L34.133,433.198z\"/>\n                        </g>\n                    </g>\n                </svg>\n            }\n        </div>\n    )\n}\n\nexport default PlayButton\nexport { PlayButton }\n","import React from 'react'\n\nfunction LoopButton(props) {\n    const { looping = false, onChange = () => { } } = props\n    return (\n        <div onClick={() => { onChange(!looping) }}>\n            {looping ? <svg className='w-100 h-auto' style={{ fill: '#007bff' }} id=\"Layer\" enableBackground=\"new 0 0 64 64\" height=\"512\" viewBox=\"0 0 64 64\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m19 25h9c1.104 0 2-.896 2-2s-.896-2-2-2h-9c-6.065 0-11 4.935-11 11s4.935 11 11 11h4.172l-1.586 1.586c-.781.781-.781 2.047 0 2.828.391.391.902.586 1.414.586s1.023-.195 1.414-.586l5-5c.781-.781.781-2.047 0-2.828l-5-5c-.781-.781-2.047-.781-2.828 0s-.781 2.047 0 2.828l1.586 1.586h-4.172c-3.859 0-7-3.141-7-7 0-3.86 3.141-7 7-7z\" /><path d=\"m45 21h-4.172l1.586-1.586c.781-.781.781-2.047 0-2.828s-2.047-.781-2.828 0l-5 5c-.781.781-.781 2.047 0 2.828l5 5c.391.391.902.586 1.414.586s1.023-.195 1.414-.586c.781-.781.781-2.047 0-2.828l-1.586-1.586h4.172c3.859 0 7 3.14 7 7 0 3.859-3.141 7-7 7h-9c-1.104 0-2 .896-2 2s.896 2 2 2h9c6.065 0 11-4.935 11-11s-4.935-11-11-11z\" /></svg> : <svg className='w-100 h-auto' style={{ fill: ' #dadada' }} id=\"Layer\" enableBackground=\"new 0 0 64 64\" height=\"512\" viewBox=\"0 0 64 64\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m19 25h9c1.104 0 2-.896 2-2s-.896-2-2-2h-9c-6.065 0-11 4.935-11 11s4.935 11 11 11h4.172l-1.586 1.586c-.781.781-.781 2.047 0 2.828.391.391.902.586 1.414.586s1.023-.195 1.414-.586l5-5c.781-.781.781-2.047 0-2.828l-5-5c-.781-.781-2.047-.781-2.828 0s-.781 2.047 0 2.828l1.586 1.586h-4.172c-3.859 0-7-3.141-7-7 0-3.86 3.141-7 7-7z\" /><path d=\"m45 21h-4.172l1.586-1.586c.781-.781.781-2.047 0-2.828s-2.047-.781-2.828 0l-5 5c-.781.781-.781 2.047 0 2.828l5 5c.391.391.902.586 1.414.586s1.023-.195 1.414-.586c.781-.781.781-2.047 0-2.828l-1.586-1.586h4.172c3.859 0 7 3.14 7 7 0 3.859-3.141 7-7 7h-9c-1.104 0-2 .896-2 2s.896 2 2 2h9c6.065 0 11-4.935 11-11s-4.935-11-11-11z\" /></svg>}\n\n        </div>\n    )\n}\n\nexport default LoopButton\nexport { LoopButton }","import React from 'react'\n\nfunction StopButton(props) {\n    const { isStopped, onChange = () => { } } = props\n    return (\n        <div onClick={() => onChange(!isStopped)}>\n            {isStopped\n                ? <div className='mx-2 h-auto my-1' style={{ width: '2rem' }}>\n                    <svg style={{ fill: '#dadada' }} className='w-100 h-auto' id=\"Capa_1\" enableBackground=\"new 0 0 512 512\" height=\"512\" viewBox=\"0 0 512 512\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m256 0c-141.159 0-256 114.841-256 256s114.841 256 256 256 256-114.841 256-256-114.841-256-256-256zm115 356c0 8.284-6.716 15-15 15h-200c-8.284 0-15-6.716-15-15v-200c0-8.284 6.716-15 15-15h200c8.284 0 15 6.716 15 15z\" /><path d=\"m171 171h170v170h-170z\" /></g></svg>\n                </div>\n                : <div className='mx-2 h-auto my-1' style={{ width: '2rem' }} >\n                    <svg className='w-100 h-auto' style={{ fill: '#007bff' }} id=\"Capa_1\" enableBackground=\"new 0 0 512 512\" height=\"512\" viewBox=\"0 0 512 512\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m256 0c-141.159 0-256 114.841-256 256s114.841 256 256 256 256-114.841 256-256-114.841-256-256-256zm115 356c0 8.284-6.716 15-15 15h-200c-8.284 0-15-6.716-15-15v-200c0-8.284 6.716-15 15-15h200c8.284 0 15 6.716 15 15z\" /><path d=\"m171 171h170v170h-170z\" /></g></svg>\n                </div>}\n        </div>\n    )\n}\n\nexport default StopButton\nexport { StopButton }\n","import { Eventjs } from \"./event\"\n\nclass CountdownTimer extends Eventjs {\n    intervalId: number\n    constructor() {\n        super('tick', 'finished')\n        this.intervalId = -1\n    }\n\n    play(time: number) {\n        this.stop()\n\n        let start = Date.now(),\n            diff\n        const timer = () => {\n            // get the number of seconds that have elapsed since \n            // startTimer() was called\n            diff = time - (((Date.now() - start) / 1000) | 0);\n\n            // does the same job as parseInt truncates the float\n            // minutes = (diff / 60) | 0;\n            // seconds = (diff % 60) | 0;\n\n            // minutes = minutes < 10 ? \"0\" + minutes : minutes;\n            // seconds = seconds < 10 ? \"0\" + seconds : seconds;\n            this.trigger('tick', diff)\n            if (diff <= 0) {\n                // add one second so that the count down starts at the full duration\n                // example 05:00 not 04:59\n                start = Date.now() + 1000;\n                this.stop()\n\n                this.trigger('finished')\n            }\n        };\n        // we don't want to wait a full second before the timer starts\n        timer();\n        this.intervalId = window.setInterval(timer, 1000);\n\n\n    }\n\n    stop() {\n        clearInterval(this.intervalId)\n    }\n\n}\n\nexport default CountdownTimer","/**\n * Creates an event manager object. This function can be called with or without \"new\" keyword.\n * If it is called with \"new\", the resulting object can be used stand alone or attached to another object.\n * If it is called without \"new\", the target object should be passed as a parameter.\n * Eventjs attaches three functions to its target:\n *   on(), off(), trigger()\n * The parameters can be string or object. Strings represent event names and object represents the object that is\n * applied to the event listeners as their 'this'\n * Duplicate event strings are allowed though it doesn't have any useful application!\n * Duplicate target objects is allowed too. The last one will be set as the target.\n * If no target object is specified, the listener functions will be called with their 'this' set to the current instance\n * of eventjs object.\n * @throws TypeError if any of the variables has a type other than string or object\n * @throws Error if there is no event name strings in the parameter\n * @throws ReferenceError if this instance is not created with the 'new' keyword and no object is passed as the target\n * @constructor\n */\n/**\n * Creates an event manager object. This function can be called with or without \"new\" keyword.\n * If it is called with \"new\", the resulting object can be used stand alone or attached to another object.\n * If it is called without \"new\", the target object should be passed as a parameter.\n * Eventjs attaches three functions to its target:\n *   on(), off(), trigger()\n * The parameters can be string or object. Strings represent event names and object represents the object that is\n * applied to the event listeners as their 'this'\n * Duplicate event strings are allowed though it doesn't have any useful application!\n * Duplicate target objects is allowed too. The last one will be set as the target.\n * If no target object is specified, the listener functions will be called with their 'this' set to the current instance\n * of eventjs object.\n * @throws TypeError if any of the variables has a type other than string or object\n * @throws Error if there is no event name strings in the parameter\n * @throws ReferenceError if this instance is not created with the 'new' keyword and no object is passed as the target\n * @constructor\n */\nexport class Eventjs {\n    constructor( /* list of at least event names and one optional target object (in any order) */) {\n        var events = {};\n        var target = this;\n        var numEventNames = 0;\n        for (var i = 0; i < arguments.length; i++) {\n            var arg = arguments[i];\n            switch (typeof arg) {\n                case 'string':\n                    events[arg] = [ /*list of event listeners */];\n                    numEventNames++;\n                    break;\n                case 'object':\n                    target = arg; // 'this' for the listeners\n                    break;\n                default:\n                    throw new TypeError('Eventjs() only accepts string and object parameters');\n                    \n            }\n        }\n\n        if (numEventNames === 0) {\n            throw new Error('There should be at least one event name (string) for the Eventjs to be useful.');\n        }\n\n        if ((target === this) && !(this instanceof Eventjs)) {\n            throw new ReferenceError('Eventjs is not called with \"new\" keyword and no parameter of type object is passed to it');\n        }\n\n        /**\n         * if there is no such event, throw an exception\n         * @throws ReferenceError if the event name is not registered in this handler when this Eventjs object was created\n         */\n        function checkEventName(eventName) {\n            \n            if (typeof eventName !== 'string' || !events[eventName]) {\n                throw new ReferenceError('The event name does not exist in this event manager: ' + eventName);\n            }\n            return true;\n        }\n\n        /**\n         * registers an event listener\n         */\n        target.on = function (eventName /*, one or more listeners... */) {\n            \n            checkEventName(eventName);\n            //add every handler to the list of events for this particular event name\n            for (var i = 1; i < arguments.length; i++) {\n                var listener = arguments[i];\n                //if this handler doesn't already exist in the list add it\n                if (events[eventName].indexOf(listener) === -1) {\n                    events[eventName].push(listener);\n                }\n            }\n            return this;\n        };\n\n        /**\n         * un-register a handler from an event name. if handler is missing, all handlers will be removed\n         */\n        target.off = function (eventName /*, one or more listeners... */) {\n            \n            switch (arguments.length) {\n                case 0: //no event name specified. remove all event listeners\n                    for (var iEventName in events) {\n                        if (events.hasOwnProperty(iEventName)) {\n                            target.off(iEventName);\n                        }\n                    }\n                    break;\n                case 1: //only the event name specified. remove all event listeners for this particular event\n                    checkEventName(eventName);\n                    events[eventName].length = 0;\n                    break;\n                default: //remove the specified event listeners for the specified event name\n                    checkEventName(eventName);\n                    //add every handler to the list of events for this particular event name\n                    for (var i = 1; i < arguments.length; i++) {\n                        var currListener = arguments[i];\n                        //if this handler doesn't already exist in the list add it\n                        var currHandlerIndex = events[eventName].indexOf(currListener);\n                        if (currHandlerIndex !== -1) {\n                            events[eventName].splice(currHandlerIndex, 1);\n                        }\n                    }\n                    break;\n            }\n            return this;\n        };\n\n        /**\n         * triggers a handler with a list of arguments. Any argument to the event handler can follow the eventName.\n         * If an error prevents a listener from running, the other\n         * listeners will run anyway. After the execution is complete, the trigger() function throws an array containing\n         * information about those errors.\n         * @throws Error if any of the event listeners was interrupted with an exception. The resulting error object has a\n         *         errors property which can be used to investigate the details of the errors.\n         *         It is an array of array of exception objects which give information about which listener was interrupted\n         *         with an exception. Each element of this array contains a 'listener' and an 'error' key.\n         */\n        target.trigger = function (eventName /*, optional list of arguments to be passed to event handler */) {\n            \n            checkEventName(eventName);\n            var argumentList = [];\n            //add all the arguments after the first argument to this list (firs argument is the eventName)\n            for (var i = 1; i < arguments.length; i++) {\n                argumentList.push(arguments[i]);\n            }\n            var listeners = events[eventName];\n            var errors = [];\n            //now run the events that are explicityly registered with this event manager\n            for (var j = 0; j < listeners.length; j++) {\n                var lis = listeners[j];\n                try {\n                    lis.apply(target, argumentList);\n                } catch (e) {\n                    errors.push({\n                        listener: lis,\n                        error: e\n                    });\n                }\n            }\n            if (errors.length > 0) {\n                var newError = new Error('At least one of the event listeners was interrupted with an error. See errors');\n                console.log(errors)\n                newError.errors = errors;\n                throw newError;\n            }\n            return this;\n        };\n\n        return target;\n    }\n}","function showNotification(title) {\n    if (!(\"Notification\" in window)) {\n        alert(\"This browser does not support desktop notification\");\n    }\n\n    // Let's check whether notification permissions have already been granted\n    else if (Notification.permission === \"granted\") {\n        // If it's okay let's create a notification\n        return new Notification(title);\n    }\n\n    // Otherwise, we need to ask the user for permission\n    else if (Notification.permission !== \"denied\") {\n        Notification.requestPermission().then(function (permission) {\n            // If the user accepts, let's create a notification\n            if (permission === \"granted\") {\n                return new Notification(title);\n            }\n        });\n    }\n}\n\nexport default showNotification","import { useRef, useState } from \"react\"\nimport { Howl } from \"howler\"\nexport default function useSoundPlayer() {\n    const [playerId, setPlayerId] = useState<number>(-1)\n    const playerRef = useRef<Howl | null>(null)\n\n    function play(sound: string, time: number) {\n        playerRef.current = new Howl({ src: [sound] })\n        const handleId = playerRef.current.play()\n\n        if (time) {\n            setTimeout(() => {\n                if (!playerRef.current) return\n                playerRef.current.stop(handleId)\n            }, time*1000);\n        }\n        setPlayerId(handleId)\n    }\n\n    function pause() {\n        if (!playerRef.current) return\n        playerRef.current.pause(playerId)\n    }\n\n    function stop() {\n        if (!playerRef.current) return\n        playerRef.current.stop(playerId)\n    }\n\n    return { play, pause, stop }\n\n}","const getItem = <T>(key: string): T | null => {\r\n  const stringifiedData = localStorage.getItem(key);\r\n  if (!stringifiedData) return null;\r\n  const parsedData = JSON.parse(stringifiedData);\r\n  return parsedData;\r\n};\r\n\r\nconst setItem = (key: string, data: { [key: string]: any }): void => {\r\n  localStorage.setItem(key, JSON.stringify(data));\r\n};\r\n\r\nconst removeItem = (key: string): void => {\r\n  localStorage.removeItem(key);\r\n};\r\n\r\nconst ls = { getItem, setItem, removeItem };\r\n\r\nexport { ls as localStorage };\r\n","import { useRef, useState } from \"react\";\nimport { v1 as uuidv1 } from \"uuid\";\nimport { localStorage } from \"../utils/localStorage\";\n\ntype Timer = { id: string; name: string; time: number };\ntype TimerStore = {\n  [id: string]: Timer;\n};\n\nexport default function useTimerStore() {\n  const [timerStore, setTimerStore] = useState<TimerStore>({});\n\n  function addTimer(name: string, time: number): Timer {\n    const id = uuidv1();\n    const newTimer = { id: id, name: name, time: time };\n    setTimerStore({ ...timerStore, [id]: newTimer });\n    saveTimer(newTimer);\n    return newTimer;\n  }\n  function getTimer(id: string): Timer {\n    const timer = timerStore[id];\n    return timer;\n  }\n  function deleteTimer(id: string) {\n    const newTimerStore = { ...timerStore };\n    delete newTimerStore[id];\n    localStorage.removeItem(id);\n    setTimerStore(newTimerStore);\n  }\n\n  function loadTimer(id: string) {\n    const timer = localStorage.getItem<Timer>(id);\n    if (!timer) return null;\n    return timer;\n  }\n\n  function saveTimer(timer: Timer) {\n    localStorage.setItem(timer.id, timer);\n  }\n\n  function init(idList: string[]) {\n    const timerStore: TimerStore = {};\n    idList.forEach((id) => {\n      const timer = loadTimer(id);\n      if (timer) timerStore[id] = timer;\n    });\n    setTimerStore(timerStore);\n  }\n\n  function updateTimer(id: string, opts: any) {\n    const newTimerStore = { ...timerStore };\n    newTimerStore[id].name = opts.name || newTimerStore[id].name;\n    newTimerStore[id].time = opts.time || newTimerStore[id].time;\n    saveTimer(newTimerStore[id]);\n    setTimerStore(newTimerStore);\n  }\n\n  return {\n    init,\n    addTimer,\n    getTimer,\n    deleteTimer,\n    updateTimer,\n    timerStore,\n  };\n}\n","import { useEffect, useState } from \"react\";\r\nimport { localStorage } from \"../utils/localStorage\";\r\nimport useTimerStore from \"./useTimerStore\";\r\n\r\ntype TimerGroupStore = {\r\n  id: string;\r\n  name: string;\r\n  timers: string[];\r\n};\r\n\r\nexport default function useTimerGroup(id: string, name = \"unname\") {\r\n  const [timerGroupStore, setTimerGroupStore] = useState<TimerGroupStore>({\r\n    id: id,\r\n    name: name,\r\n    timers: [],\r\n  });\r\n  //   const [timerStore, setTimerStore] = useState<TimerStore>({});\r\n  const {\r\n    init,\r\n    addTimer,\r\n    getTimer,\r\n    deleteTimer,\r\n    updateTimer,\r\n    timerStore,\r\n  } = useTimerStore();\r\n\r\n  //get localstorage data if any\r\n  useEffect(() => {\r\n    if (!id) return;\r\n    const savedTimerGroupStoreData = localStorage.getItem<TimerGroupStore>(id);\r\n    if (!savedTimerGroupStoreData) return;\r\n    setTimerGroupStore(savedTimerGroupStoreData);\r\n\r\n    const timersList = savedTimerGroupStoreData.timers;\r\n    init(timersList);\r\n  }, [id]);\r\n\r\n  function addTimerInGroup(name: string, time: number) {\r\n    const newTimer = addTimer(name, time);\r\n    const newTimerGroups: TimerGroupStore = { ...timerGroupStore };\r\n    newTimerGroups.timers.push(newTimer.id);\r\n    localStorage.setItem(id, newTimerGroups);\r\n    setTimerGroupStore(newTimerGroups);\r\n    return newTimerGroups;\r\n  }\r\n\r\n  function deleteTimerFromGroup(timerId: string) {\r\n    const newTimerGroupsStore = { ...timerGroupStore };\r\n    const newTimerList = newTimerGroupsStore.timers.filter(\r\n      (_timerId) => _timerId !== timerId\r\n    );\r\n    if (newTimerList.length !== newTimerGroupsStore.timers.length)\r\n      deleteTimer(timerId);\r\n    newTimerGroupsStore.timers = newTimerList;\r\n    localStorage.setItem(newTimerGroupsStore.id, newTimerGroupsStore);\r\n    setTimerGroupStore(newTimerGroupsStore);\r\n    return newTimerGroupsStore;\r\n  }\r\n\r\n  function deleteTimerGroup() {\r\n    const timersList = timerGroupStore.timers;\r\n    timersList.forEach((timerId: string) => {\r\n      deleteTimer(timerId);\r\n    });\r\n    localStorage.removeItem(id);\r\n  }\r\n\r\n  function changeGroupName(newName: string) {\r\n    if (!newName) return;\r\n    setTimerGroupStore({ ...timerGroupStore, name: newName });\r\n    localStorage.setItem(timerGroupStore.id, {\r\n      ...timerGroupStore,\r\n      name: newName,\r\n    });\r\n  }\r\n\r\n  return {\r\n    addTimerInGroup,\r\n    deleteTimerFromGroup,\r\n    deleteTimerGroup,\r\n    changeGroupName,\r\n    timerGroupStore,\r\n    updateTimer,\r\n    getTimer,\r\n    timerStore,\r\n  };\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\nimport CountdownTimer from \"../lib/countdownTimer\";\nimport showNotification from \"../utils/notification\";\nimport useSoundPlayer from \"./useSoundPlayer\";\nimport useTimerGroup from \"./useTimerGroup\";\nconst defaultSound = require('./alarm.mp3')\n\nexport default function useTimerCard(id: string, name = 'Unnamed') {\n    const { ...timerGroup } = useTimerGroup(id, name)\n    const [timerCardData, setTimerCardData] = useState({ looping: false, status: 'stopped' })\n    const [runningTimer, setRunningTimer] = useState({ currentTimerId: '', remainingTime: 0, time: 0 })\n    const countdownTimerRef = useRef(new CountdownTimer())\n    const [onTimerFinished, setOnTimerFinished] = useState(false)//everytime var change it value from false to true next timer is played if constraints satisfied\n    const runningTimerRef = useRef(runningTimer) //only used for purpose of storing data to save it later in localstorage\n    const timerCardDataRef = useRef(timerCardData)//only used when storing data to local storage\n    const { play, pause, stop } = useSoundPlayer()\n    //to save running timer data before it is closed\n    useEffect(() => {\n        const onPageHide = () => {\n            localStorage.setItem('runningTimerData' + id, JSON.stringify(runningTimerRef.current))\n            localStorage.setItem('timerCardData' + id, JSON.stringify(timerCardDataRef.current))\n        }\n        window.addEventListener('pagehide', onPageHide)\n        return () => {\n            window.removeEventListener('pagehide', onPageHide)\n        }\n\n    }, [id])\n\n    useEffect(() => {\n        const onTick = (remainingTime: number) => {\n            setRunningTimer(({ ...runningTimerData }): any => {\n                const newData = { ...runningTimerData, remainingTime: remainingTime }\n                return newData\n            })\n        }\n        const countdownTimer = countdownTimerRef.current\n        countdownTimer.on('tick', onTick)\n\n        return () => {\n            countdownTimer.off('tick', onTick)\n        }\n    }, [])\n\n    useEffect(() => {\n        runningTimerRef.current = runningTimer\n    }, [runningTimer])\n\n    useEffect(() => {\n        timerCardDataRef.current = { ...timerCardData, status: timerCardData.status === 'stopped' ? 'stopped' : 'paused' }\n    }, [timerCardData])\n\n    useEffect(() => {\n        if (!onTimerFinished) return\n\n        const timerList = timerGroup.timerGroupStore.timers\n        const indexofFinishedTimer = timerList.indexOf(runningTimer.currentTimerId)\n        let nextTimer = timerGroup.timerStore[timerList[indexofFinishedTimer + 1]]\n        //to check wheter last timer\n        if (!nextTimer) {\n            //if looping is disabled change status to stopped and do noting\n            if (timerCardData.looping === false) {\n                setTimerCardData({ ...timerCardData, status: 'stopped' })\n                setRunningTimer({ ...runningTimer, remainingTime: 0, currentTimerId: '' })\n                setOnTimerFinished(false)\n                return\n\n            }\n\n            //get the first timer and set it as running timer\n            nextTimer = timerGroup.timerStore[timerList[0]]\n\n            setRunningTimer({ currentTimerId: nextTimer.id, remainingTime: nextTimer.time, time: nextTimer.time })\n\n\n        }\n        setRunningTimer({ currentTimerId: nextTimer.id, remainingTime: nextTimer.time, time: nextTimer.time })\n\n        playCard(nextTimer.id)\n        setOnTimerFinished(false)\n\n        return () => {\n\n        }\n    }, [onTimerFinished])\n\n    useEffect(() => {\n        const stringifiedTimerCardData = localStorage.getItem('timerCardData' + id)\n        if (stringifiedTimerCardData) {\n            const parsedTimerCardData = JSON.parse(stringifiedTimerCardData)\n            setTimerCardData(parsedTimerCardData)\n        }\n\n\n        const stringifiedRunningTimerData = localStorage.getItem('runningTimerData' + id)\n        if (stringifiedRunningTimerData) {\n            const parsedRunningTimerData = JSON.parse(stringifiedRunningTimerData)\n            setRunningTimer(parsedRunningTimerData)\n            console.log(parsedRunningTimerData);\n        }\n\n\n    }, [id])\n\n    const playCard = (currentTimerId = '') => {\n        currentTimerId = currentTimerId || runningTimer.currentTimerId as unknown as string\n\n        //no currentTimerid might mean its first time playing \n        if (!currentTimerId) {\n            currentTimerId = timerGroup.timerGroupStore.timers[0] as string\n            //if index 0 does not have current timer id it means card does not have timer hence do nothing\n            if (!currentTimerId) return\n        }\n        const timerData = timerGroup.timerStore[currentTimerId]\n        //in off chance if currenttimerId is invalid do nothing\n        if (!timerData) return\n\n        setRunningTimer({ ...runningTimer, currentTimerId: currentTimerId })\n        countdownTimerRef.current.off('finished')\n        if (timerCardData.status === 'paused') {\n            countdownTimerRef.current.play(runningTimer.remainingTime)\n        } else {\n            countdownTimerRef.current.play(timerData.time)\n        }\n        setTimerCardData({ ...timerCardData, status: 'playing' })\n        countdownTimerRef.current.on('finished', () => {\n            showNotification(`${timerGroup.timerGroupStore.name} => ${timerData.name} | completed`)\n            play(defaultSound, 2)\n\n            setOnTimerFinished(true)\n        })\n    }\n\n    const pausecard = () => {\n        setTimerCardData({ ...timerCardData, status: 'paused' })\n        countdownTimerRef.current.stop()\n    }\n\n    const stopCard = () => {\n        countdownTimerRef.current.stop()\n        setTimerCardData({ ...timerCardData, status: 'stopped' })\n        setRunningTimer({ ...runningTimer, remainingTime: 0, currentTimerId: '' })\n\n\n\n        console.log('Stop Card');\n    }\n\n    const toggleLooping = () => {\n        const newTimerCardData = { ...timerCardData, looping: !timerCardData.looping }\n        setTimerCardData(newTimerCardData)\n        localStorage.setItem('timerCardData' + id, JSON.stringify(newTimerCardData))\n\n    }\n\n\n\n    return { ...timerGroup, playCard, pausecard, stopCard, toggleLooping, timerCardData, runningTimer }\n}","import React, { useState } from 'react'\nimport { Button, Card } from 'react-bootstrap'\nimport Timer from '../timer/Timer'\n\n\nimport { PlayButton } from \"./playButton\";\nimport { LoopButton } from \"./loopButton\";\nimport StopButton from './stopButton'\n\nimport useTimerCard from '../../hooks/useTimerCards';\n\n\nexport default function TimerCard(props) {\n    const { onDelete, timerCardId } = props\n    const { ...timerCard } = useTimerCard(props.timerCardId)\n    const [editTitle, setEditTitle] = useState(() => false)\n\n\n    return <div >\n\n        <Card className={'m-1 shadow-lg '} style={{\n            width: '25%',\n            minWidth: '265px',\n            maxWidth: '265px',\n        }}>\n            <div className='d-flex flex-row-reverse'>\n                <Button size='sm' className='btn btn-danger' onClick={() => {\n                    timerCard.deleteTimerGroup()\n                    onDelete(timerCardId)\n                }}>X</Button>\n            </div>\n            <Card.Body>\n                <div className='h1 text-center'>\n                    {parseInt(timerCard.runningTimer.remainingTime / 60)}:{timerCard.runningTimer.remainingTime % 60}\n                </div>\n                <div className='row'>\n\n                    <div className='col-10 text-center'>\n                        <Card.Title onClick={() => setEditTitle(true)} >\n                            {editTitle ? <form\n                                onSubmit={(event) => {\n                                    event.preventDefault()\n                                    const title = event.currentTarget.title.value\n                                    if (title) {\n                                        timerCard.changeGroupName(title)\n                                    }\n                                    setEditTitle(false)\n                                }}\n                                onBlur={(event) => {\n                                    event.preventDefault()\n                                    const title = event.currentTarget.title.value\n                                    if (title) {\n                                        timerCard.changeGroupName(title)\n                                    }\n                                    setEditTitle(false)\n                                }}>\n                                <input autoFocus type='text' name='title'\n                                />\n                            </form> : timerCard.timerGroupStore.name}\n                        </Card.Title>\n                    </div>\n                    <div className='col-2 px-0 user-select-none'>\n                        <LoopButton looping={timerCard.timerCardData.looping}\n                            onChange={() => timerCard.toggleLooping()} />\n                    </div>\n                </div>\n                <div className='d-flex  user-select-none'>\n                    <div className=' mx-2 h-auto my-1' style={{ width: '2rem' }}>\n                        <PlayButton isPlaying={timerCard.timerCardData.status === 'playing'} onChange={(state) => {\n                            const action = state ? timerCard.playCard : timerCard.pausecard\n                            action()\n                        }} />\n                    </div>\n                    <StopButton isStopped={timerCard.timerCardData.status === 'stopped'} onChange={(isStopped) => {\n                        if (isStopped) timerCard.stopCard()\n                    }} />\n                </div>\n                {timerCard.timerGroupStore.timers.map(timerId => {\n                    const timer = timerCard.timerStore[timerId]\n                    return <Timer key={timer.id} id={timer.id} active={timerCard.runningTimer?.currentTimerId === timer?.id}\n                        onDelete={(timerId) => {\n                            timerCard.deleteTimerFromGroup(timerId)\n                        }}\n                        onNameChange={newName => timerCard.updateTimer(timerId, { name: newName })}\n                        onTimeChange={newTime => timerCard.updateTimer(timerId, { time: newTime })}\n                        name={timer.name}\n                        time={timer.time} />\n                })}\n                <div className='row'>\n                    <div className='col-3'></div>\n                    <Button className='col-6' size='sm' onClick={() => {\n                        timerCard.addTimerInGroup('unaname', 300)\n                    }}>Add Timer</Button>\n                    <div className='col-3'></div>\n                </div>\n            </Card.Body>\n\n        </Card>\n\n    </div>\n\n}\n","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Button } from 'react-bootstrap'\nimport 'react-tabs/style/react-tabs.css'\nimport { v1 as uuidv1 } from 'uuid';\nimport TimerCard from './component/timerCard/TimerCard'\n\n\nfunction App(props) {\n    const [timerCardsList, setTimerCardsList] = useState([])\n    useEffect(()  => {\n        const savedTimerCardList = localStorage.getItem('timerCardList')\n        if (savedTimerCardList) {\n            setTimerCardsList(JSON.parse(savedTimerCardList))\n        }\n    }, [])\n\n    useEffect(() => {\n        localStorage.setItem('timerCardList', JSON.stringify(timerCardsList))\n\n    }, [timerCardsList])\n\n    useEffect(() => {\n        document.body.classList.remove('page-loading')\n        document.body.classList.add('page-loaded')\n    }, [])\n\n\n\n\n    return (\n        <>\n            <Button onClick={() => {\n                setTimerCardsList(prevTimerCardList => [...prevTimerCardList, uuidv1()])\n            }}>Add Timer Card</Button>\n            <div className='overflow-auto'>\n                <div className='d-flex flex-row ' style={{ alignItems: 'flex-start' }}>\n                    {timerCardsList.map(timerCardId => <TimerCard key={timerCardId} timerCardId={timerCardId} onDelete={(id) => {\n                        setTimerCardsList(timerCardsList => timerCardsList.filter(timerId => timerId !== id))\n                    }} />)}\n\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default App\n","import React from \"react\";\r\n\r\nconst SoundPlayerContext = React.createContext('');\r\nexport default SoundPlayerContext;","import { ReactNode } from \"react\";\r\nimport React from \"react\";\r\nimport SoundPlayerContext from \"../contexts/SoundPlayerContext\";\r\n\r\ntype Props = {\r\n    children: ReactNode;\r\n};\r\nexport default function SoundPlayerProvider(props: Props) {\r\n    const { children } = props\r\n    return (\r\n        <SoundPlayerContext.Provider value={'Himanshu'}>\r\n            {children}\r\n        </SoundPlayerContext.Provider>\r\n    );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n    window.addEventListener('activate', function (event) {\n      event.waitUntil(\n        caches.keys().then(function (cacheNames) {\n          return Promise.all(\n            cacheNames.filter(function (cacheName) {\n              // Return true if you want to remove this cache,\n              // but remember that caches are shared across\n              // the whole origin\n            }).map(function (cacheName) {\n              return caches.delete(cacheName)\n            })\n          )\n        })\n      )\n    })\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport SoundPlayerProvider from './providers/SoundPlayerProvider'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <SoundPlayerProvider>\n      <App />\n    </SoundPlayerProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}