{"version":3,"sources":["component/timer/close.svg","component/timer/Timer.jsx","component/timerCard/close.svg","component/timerCard/playButton.jsx","component/timerCard/loopButton.jsx","component/timerCard/stopButton.jsx","lib/countdownTimer.ts","lib/event.js","utils/notification.js","hooks/useSoundPlayer.tsx","utils/localStorage.ts","hooks/useTimerStore.tsx","hooks/useTimerGroup.tsx","hooks/alarm.mp3","component/timerCard/TimerCard.jsx","hooks/useTimerCards.tsx","App.jsx","contexts/SoundPlayerContext.tsx","providers/SoundPlayerProvider.tsx","serviceWorker.js","index.js"],"names":["Timer","props","onNameChange","onTimeChange","onDelete","id","name","time","active","useState","mins","setMins","secs","setSecs","editTitle","setEditTitle","titleBgColor","setTitleBgColor","useEffect","minutes","parseInt","seconds","className","onClick","onSubmit","event","preventDefault","currentTarget","title","value","onBlur","autoFocus","autoComplete","type","src","close","style","width","placeholder","onChange","e","target","PlayButton","isPlaying","fill","height","version","xmlns","x","y","viewBox","d","LoopButton","looping","enableBackground","StopButton","isStopped","CountdownTimer","intervalId","this","stop","diff","start","Date","now","timer","trigger","window","setInterval","clearInterval","events","numEventNames","i","arguments","length","arg","TypeError","Error","Eventjs","ReferenceError","checkEventName","eventName","on","listener","indexOf","push","off","iEventName","hasOwnProperty","currListener","currHandlerIndex","splice","argumentList","listeners","errors","j","lis","apply","error","newError","console","log","showNotification","Notification","permission","requestPermission","then","alert","useSoundPlayer","playerId","setPlayerId","playerRef","useRef","play","sound","current","Howl","handleId","setTimeout","pause","ls","key","stringifiedData","localStorage","getItem","JSON","parse","data","setItem","stringify","removeItem","useTimerStore","timerStore","setTimerStore","saveTimerToStorage","init","idList","forEach","loadTimerFromStorage","addTimer","uuidv1","newTimer","getTimer","deleteTimer","newTimerStore","deleteTimeFromStorage","updateTimer","opts","useTimerGroup","timers","timerGroupStore","setTimerGroupStore","savedTimerGroupStoreData","loadTimerGroupFromLocalStorage","timersList","saveTimerGroupToLocalStorage","timerGroup","deleteTimerGroupFromLocalStorage","addTimerInGroup","newTimerGroups","deleteTimerFromGroup","timerId","newTimerGroupsStore","newTimerList","filter","_timerId","deleteTimerGroup","changeGroupName","newName","TimerCard","timerCardId","status","timerCardData","setTimerCardData","currentTimerId","remainingTime","runningTimer","setRunningTimer","countdownTimerRef","onTimerFinished","setOnTimerFinished","runningTimerRef","timerCardDataRef","onPageHide","addEventListener","removeEventListener","onTick","runningTimerData","countdownTimer","timerList","indexofFinishedTimer","nextTimer","playCard","parsedTimerCardData","parsedRunningTimerData","timerData","defaultSound","changeTimerCardName","removeTimer","chanageTimerTime","newTime","changeTimerName","deleteTimerCard","pausecard","stopCard","toggleLooping","newTimerCardData","useTimerCard","timerCard","minWidth","maxWidth","state","map","App","timerCardsList","setTimerCardsList","savedTimerCardList","document","body","classList","remove","add","prevTimerCardList","alignItems","SoundPlayerContext","React","createContext","SoundPlayerProvider","children","Provider","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","waitUntil","caches","keys","cacheNames","Promise","all","cacheName","delete","fetch","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f480cb83.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/close.96841b05.svg\";","import React, { useState, useEffect } from \"react\";\nimport close from \"./close.svg\";\n\nfunction Timer(props) {\n  const {\n    onNameChange,\n    onTimeChange,\n    onDelete,\n    id,\n    name,\n    time,\n    active,\n  } = props;\n\n  const [mins, setMins] = useState();\n  const [secs, setSecs] = useState();\n  const [editTitle, setEditTitle] = useState(() => false);\n  const [titleBgColor, setTitleBgColor] = useState(\"alert-info\");\n\n  useEffect(() => {\n    if (!time) return;\n    const minutes = parseInt(time / 60);\n    const seconds = parseInt(time % 60);\n    setMins(minutes);\n    setSecs(seconds);\n  }, [time]);\n\n  useEffect(() => {\n    if (active) {\n      setTitleBgColor(\"bg-red-100\");\n    } else {\n      setTitleBgColor(\"bg-blue-100\");\n    }\n  }, [active]);\n\n  return (\n    <div\n      id={props.id}\n      // className=\"my-1 px-2 pt-2 border rounded-lg border-gray-300\"\n      className={`my-1 rounded-lg ${active ? \"elevation-4 \" : \"elevation-1\"}`}\n    >\n      <div\n        className={`${titleBgColor} w-full rounded-t-lg  border border-b-0 border-gray-300 px-1 `}\n      >\n        <div className={`flex flex-row justify-between items-center`}>\n          <div onClick={() => setEditTitle(true)}>\n            {editTitle ? (\n              <form\n                onSubmit={(event) => {\n                  event.preventDefault();\n                  setEditTitle(false);\n                  onNameChange(event.currentTarget.title.value);\n                }}\n                onBlur={(event) => {\n                  onNameChange(event.currentTarget.title.value);\n                  setEditTitle(false);\n                }}\n              >\n                <input\n                  autoFocus\n                  autoComplete={\"off\"}\n                  type=\"text\"\n                  name=\"title\"\n                />\n              </form>\n            ) : (\n              name\n            )}\n          </div>\n          <div>\n            <button\n              className=\"select-none flex items-center rounded-full transition duration-150 hover:elevation-2 transform hover:scale-110\"\n              onClick={() => {\n                onDelete(id);\n              }}\n            >\n              <img className=\"h-4 w-auto\" src={close} />\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"border border-t-0 rounded-b-lg  border-gray-300\">\n        {/* <div className={messageBgColor}>{TimerDetail.message}</div> */}\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            const minutes = parseInt(event.currentTarget.mins.value);\n            const seconds = parseInt(event.currentTarget.secs.value);\n            let time = 0;\n            if (minutes) time += minutes * 60;\n            if (seconds) time += seconds;\n            onTimeChange(time);\n          }}\n          onBlur={(event) => {\n            const minutes = parseInt(event.currentTarget.mins.value);\n            const seconds = parseInt(event.currentTarget.secs.value);\n            let time = 0;\n            if (minutes) time += minutes * 60;\n            if (seconds) time += seconds;\n            onTimeChange(time);\n          }}\n          className=\"text-center py-2\"\n        >\n          <input\n            name=\"mins\"\n            style={{ width: \"3em\" }}\n            type=\"number\"\n            placeholder=\"m\"\n            onChange={(e) => setMins(e.target.value)}\n            value={mins}\n          />\n          <span className=\"mx-1\">:</span>\n          <input\n            name=\"secs\"\n            style={{ width: \"3em\" }}\n            type=\"number\"\n            placeholder=\"s\"\n            onChange={(e) => setSecs(e.target.value)}\n            value={secs}\n          />\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Timer;\n","export default __webpack_public_path__ + \"static/media/close.96841b05.svg\";","import React from 'react'\n\nfunction PlayButton(props) {\n    const { isPlaying = false, onChange = () => { } } = props\n\n\n    return (\n        <div className='cursor-pointer' onClick={() => { onChange(!isPlaying) }}>\n            {isPlaying\n                ?\n                <svg style={{ fill: '#007bff' }} className='h-8 w-auto' height=\"512\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                    viewBox=\"0 0 477.867 477.867\" >\n                    <g>\n                        <g>\n                            <path d=\"M187.733,0H51.2c-9.426,0-17.067,7.641-17.067,17.067V460.8c0,9.426,7.641,17.067,17.067,17.067h136.533\n\t\t\tc9.426,0,17.067-7.641,17.067-17.067V17.067C204.8,7.641,197.159,0,187.733,0z M170.667,443.733h-102.4v-409.6h102.4V443.733z\"/>\n                        </g>\n                    </g>\n                    <g>\n                        <g>\n                            <path d=\"M426.667,0H290.133c-9.426,0-17.067,7.641-17.067,17.067V460.8c0,9.426,7.641,17.067,17.067,17.067h136.533\n\t\t\tc9.426,0,17.067-7.641,17.067-17.067V17.067C443.733,7.641,436.092,0,426.667,0z M409.6,443.733H307.2v-409.6h102.4V443.733z\"/>\n                        </g>\n                    </g>\n                </svg>\n                :\n                <svg style={{ fill: '#007bff' }} className='h-8 w-auto' height=\"512\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                    viewBox=\"0 0 477.886 477.886\">\n                    <g>\n                        <g>\n                            <path d=\"M476.091,231.332c-1.654-3.318-4.343-6.008-7.662-7.662L24.695,1.804C16.264-2.41,6.013,1.01,1.8,9.442\n\t\t\tc-1.185,2.371-1.801,4.986-1.8,7.637v443.733c-0.004,9.426,7.633,17.07,17.059,17.075c2.651,0.001,5.266-0.615,7.637-1.8\n\t\t\tL468.429,254.22C476.865,250.015,480.295,239.768,476.091,231.332z M34.133,433.198V44.692l388.506,194.253L34.133,433.198z\"/>\n                        </g>\n                    </g>\n                </svg>\n            }\n        </div>\n    )\n}\n\nexport default PlayButton\nexport { PlayButton }\n","import React from \"react\";\n\nfunction LoopButton(props) {\n  const { looping = false, onChange = () => {} } = props;\n  return (\n    <div className='cursor-pointer'\n      onClick={() => {\n        onChange(!looping);\n      }}\n    >\n      {looping ? (\n        <svg\n          className=\"h-8 w-auto\"\n          style={{ fill: \"#007bff\" }}\n          id=\"Layer\"\n          enableBackground=\"new 0 0 64 64\"\n          height=\"512\"\n          viewBox=\"0 0 64 64\"\n          width=\"512\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"m19 25h9c1.104 0 2-.896 2-2s-.896-2-2-2h-9c-6.065 0-11 4.935-11 11s4.935 11 11 11h4.172l-1.586 1.586c-.781.781-.781 2.047 0 2.828.391.391.902.586 1.414.586s1.023-.195 1.414-.586l5-5c.781-.781.781-2.047 0-2.828l-5-5c-.781-.781-2.047-.781-2.828 0s-.781 2.047 0 2.828l1.586 1.586h-4.172c-3.859 0-7-3.141-7-7 0-3.86 3.141-7 7-7z\" />\n          <path d=\"m45 21h-4.172l1.586-1.586c.781-.781.781-2.047 0-2.828s-2.047-.781-2.828 0l-5 5c-.781.781-.781 2.047 0 2.828l5 5c.391.391.902.586 1.414.586s1.023-.195 1.414-.586c.781-.781.781-2.047 0-2.828l-1.586-1.586h4.172c3.859 0 7 3.14 7 7 0 3.859-3.141 7-7 7h-9c-1.104 0-2 .896-2 2s.896 2 2 2h9c6.065 0 11-4.935 11-11s-4.935-11-11-11z\" />\n        </svg>\n      ) : (\n        <svg\n          className=\"h-8 w-auto\"\n          style={{ fill: \" #dadada\" }}\n          id=\"Layer\"\n          enableBackground=\"new 0 0 64 64\"\n          height=\"512\"\n          viewBox=\"0 0 64 64\"\n          width=\"512\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"m19 25h9c1.104 0 2-.896 2-2s-.896-2-2-2h-9c-6.065 0-11 4.935-11 11s4.935 11 11 11h4.172l-1.586 1.586c-.781.781-.781 2.047 0 2.828.391.391.902.586 1.414.586s1.023-.195 1.414-.586l5-5c.781-.781.781-2.047 0-2.828l-5-5c-.781-.781-2.047-.781-2.828 0s-.781 2.047 0 2.828l1.586 1.586h-4.172c-3.859 0-7-3.141-7-7 0-3.86 3.141-7 7-7z\" />\n          <path d=\"m45 21h-4.172l1.586-1.586c.781-.781.781-2.047 0-2.828s-2.047-.781-2.828 0l-5 5c-.781.781-.781 2.047 0 2.828l5 5c.391.391.902.586 1.414.586s1.023-.195 1.414-.586c.781-.781.781-2.047 0-2.828l-1.586-1.586h4.172c3.859 0 7 3.14 7 7 0 3.859-3.141 7-7 7h-9c-1.104 0-2 .896-2 2s.896 2 2 2h9c6.065 0 11-4.935 11-11s-4.935-11-11-11z\" />\n        </svg>\n      )}\n    </div>\n  );\n}\n\nexport default LoopButton;\nexport { LoopButton };\n","import React from 'react'\n\nfunction StopButton(props) {\n    const { isStopped, onChange = () => { } } = props\n    return (\n        <div className='cursor-pointer' onClick={() => onChange(!isStopped)}>\n            {isStopped\n                ? <div className='mx-2 h-auto my-1' style={{ width: '2rem' }}>\n                    <svg style={{ fill: '#dadada' }} className='h-8 w-auto' id=\"Capa_1\" enableBackground=\"new 0 0 512 512\" height=\"512\" viewBox=\"0 0 512 512\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m256 0c-141.159 0-256 114.841-256 256s114.841 256 256 256 256-114.841 256-256-114.841-256-256-256zm115 356c0 8.284-6.716 15-15 15h-200c-8.284 0-15-6.716-15-15v-200c0-8.284 6.716-15 15-15h200c8.284 0 15 6.716 15 15z\" /><path d=\"m171 171h170v170h-170z\" /></g></svg>\n                </div>\n                : <div className='mx-2 h-auto my-1' style={{ width: '2rem' }} >\n                    <svg className='h-8 w-auto' style={{ fill: '#007bff' }} id=\"Capa_1\" enableBackground=\"new 0 0 512 512\" height=\"512\" viewBox=\"0 0 512 512\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m256 0c-141.159 0-256 114.841-256 256s114.841 256 256 256 256-114.841 256-256-114.841-256-256-256zm115 356c0 8.284-6.716 15-15 15h-200c-8.284 0-15-6.716-15-15v-200c0-8.284 6.716-15 15-15h200c8.284 0 15 6.716 15 15z\" /><path d=\"m171 171h170v170h-170z\" /></g></svg>\n                </div>}\n        </div>\n    )\n}\n\nexport default StopButton\nexport { StopButton }\n","import { Eventjs } from \"./event\"\n\nclass CountdownTimer extends Eventjs {\n    intervalId: number\n    constructor() {\n        super('tick', 'finished')\n        this.intervalId = -1\n    }\n\n    play(time: number) {\n        this.stop()\n\n        let start = Date.now(),\n            diff\n        const timer = () => {\n            // get the number of seconds that have elapsed since \n            // startTimer() was called\n            diff = time - (((Date.now() - start) / 1000) | 0);\n\n            // does the same job as parseInt truncates the float\n            // minutes = (diff / 60) | 0;\n            // seconds = (diff % 60) | 0;\n\n            // minutes = minutes < 10 ? \"0\" + minutes : minutes;\n            // seconds = seconds < 10 ? \"0\" + seconds : seconds;\n            this.trigger('tick', diff)\n            if (diff <= 0) {\n                // add one second so that the count down starts at the full duration\n                // example 05:00 not 04:59\n                start = Date.now() + 1000;\n                this.stop()\n\n                this.trigger('finished')\n            }\n        };\n        // we don't want to wait a full second before the timer starts\n        timer();\n        this.intervalId = window.setInterval(timer, 1000);\n\n\n    }\n\n    stop() {\n        clearInterval(this.intervalId)\n    }\n\n}\n\nexport default CountdownTimer","/**\n * Creates an event manager object. This function can be called with or without \"new\" keyword.\n * If it is called with \"new\", the resulting object can be used stand alone or attached to another object.\n * If it is called without \"new\", the target object should be passed as a parameter.\n * Eventjs attaches three functions to its target:\n *   on(), off(), trigger()\n * The parameters can be string or object. Strings represent event names and object represents the object that is\n * applied to the event listeners as their 'this'\n * Duplicate event strings are allowed though it doesn't have any useful application!\n * Duplicate target objects is allowed too. The last one will be set as the target.\n * If no target object is specified, the listener functions will be called with their 'this' set to the current instance\n * of eventjs object.\n * @throws TypeError if any of the variables has a type other than string or object\n * @throws Error if there is no event name strings in the parameter\n * @throws ReferenceError if this instance is not created with the 'new' keyword and no object is passed as the target\n * @constructor\n */\n/**\n * Creates an event manager object. This function can be called with or without \"new\" keyword.\n * If it is called with \"new\", the resulting object can be used stand alone or attached to another object.\n * If it is called without \"new\", the target object should be passed as a parameter.\n * Eventjs attaches three functions to its target:\n *   on(), off(), trigger()\n * The parameters can be string or object. Strings represent event names and object represents the object that is\n * applied to the event listeners as their 'this'\n * Duplicate event strings are allowed though it doesn't have any useful application!\n * Duplicate target objects is allowed too. The last one will be set as the target.\n * If no target object is specified, the listener functions will be called with their 'this' set to the current instance\n * of eventjs object.\n * @throws TypeError if any of the variables has a type other than string or object\n * @throws Error if there is no event name strings in the parameter\n * @throws ReferenceError if this instance is not created with the 'new' keyword and no object is passed as the target\n * @constructor\n */\nexport class Eventjs {\n    constructor( /* list of at least event names and one optional target object (in any order) */) {\n        var events = {};\n        var target = this;\n        var numEventNames = 0;\n        for (var i = 0; i < arguments.length; i++) {\n            var arg = arguments[i];\n            switch (typeof arg) {\n                case 'string':\n                    events[arg] = [ /*list of event listeners */];\n                    numEventNames++;\n                    break;\n                case 'object':\n                    target = arg; // 'this' for the listeners\n                    break;\n                default:\n                    throw new TypeError('Eventjs() only accepts string and object parameters');\n                    \n            }\n        }\n\n        if (numEventNames === 0) {\n            throw new Error('There should be at least one event name (string) for the Eventjs to be useful.');\n        }\n\n        if ((target === this) && !(this instanceof Eventjs)) {\n            throw new ReferenceError('Eventjs is not called with \"new\" keyword and no parameter of type object is passed to it');\n        }\n\n        /**\n         * if there is no such event, throw an exception\n         * @throws ReferenceError if the event name is not registered in this handler when this Eventjs object was created\n         */\n        function checkEventName(eventName) {\n            \n            if (typeof eventName !== 'string' || !events[eventName]) {\n                throw new ReferenceError('The event name does not exist in this event manager: ' + eventName);\n            }\n            return true;\n        }\n\n        /**\n         * registers an event listener\n         */\n        target.on = function (eventName /*, one or more listeners... */) {\n            \n            checkEventName(eventName);\n            //add every handler to the list of events for this particular event name\n            for (var i = 1; i < arguments.length; i++) {\n                var listener = arguments[i];\n                //if this handler doesn't already exist in the list add it\n                if (events[eventName].indexOf(listener) === -1) {\n                    events[eventName].push(listener);\n                }\n            }\n            return this;\n        };\n\n        /**\n         * un-register a handler from an event name. if handler is missing, all handlers will be removed\n         */\n        target.off = function (eventName /*, one or more listeners... */) {\n            \n            switch (arguments.length) {\n                case 0: //no event name specified. remove all event listeners\n                    for (var iEventName in events) {\n                        if (events.hasOwnProperty(iEventName)) {\n                            target.off(iEventName);\n                        }\n                    }\n                    break;\n                case 1: //only the event name specified. remove all event listeners for this particular event\n                    checkEventName(eventName);\n                    events[eventName].length = 0;\n                    break;\n                default: //remove the specified event listeners for the specified event name\n                    checkEventName(eventName);\n                    //add every handler to the list of events for this particular event name\n                    for (var i = 1; i < arguments.length; i++) {\n                        var currListener = arguments[i];\n                        //if this handler doesn't already exist in the list add it\n                        var currHandlerIndex = events[eventName].indexOf(currListener);\n                        if (currHandlerIndex !== -1) {\n                            events[eventName].splice(currHandlerIndex, 1);\n                        }\n                    }\n                    break;\n            }\n            return this;\n        };\n\n        /**\n         * triggers a handler with a list of arguments. Any argument to the event handler can follow the eventName.\n         * If an error prevents a listener from running, the other\n         * listeners will run anyway. After the execution is complete, the trigger() function throws an array containing\n         * information about those errors.\n         * @throws Error if any of the event listeners was interrupted with an exception. The resulting error object has a\n         *         errors property which can be used to investigate the details of the errors.\n         *         It is an array of array of exception objects which give information about which listener was interrupted\n         *         with an exception. Each element of this array contains a 'listener' and an 'error' key.\n         */\n        target.trigger = function (eventName /*, optional list of arguments to be passed to event handler */) {\n            \n            checkEventName(eventName);\n            var argumentList = [];\n            //add all the arguments after the first argument to this list (firs argument is the eventName)\n            for (var i = 1; i < arguments.length; i++) {\n                argumentList.push(arguments[i]);\n            }\n            var listeners = events[eventName];\n            var errors = [];\n            //now run the events that are explicityly registered with this event manager\n            for (var j = 0; j < listeners.length; j++) {\n                var lis = listeners[j];\n                try {\n                    lis.apply(target, argumentList);\n                } catch (e) {\n                    errors.push({\n                        listener: lis,\n                        error: e\n                    });\n                }\n            }\n            if (errors.length > 0) {\n                var newError = new Error('At least one of the event listeners was interrupted with an error. See errors');\n                console.log(errors)\n                newError.errors = errors;\n                throw newError;\n            }\n            return this;\n        };\n\n        return target;\n    }\n}","function showNotification(title) {\n    if (!(\"Notification\" in window)) {\n        alert(\"This browser does not support desktop notification\");\n    }\n\n    // Let's check whether notification permissions have already been granted\n    else if (Notification.permission === \"granted\") {\n        // If it's okay let's create a notification\n        return new Notification(title);\n    }\n\n    // Otherwise, we need to ask the user for permission\n    else if (Notification.permission !== \"denied\") {\n        Notification.requestPermission().then(function (permission) {\n            // If the user accepts, let's create a notification\n            if (permission === \"granted\") {\n                return new Notification(title);\n            }\n        });\n    }\n}\n\nexport default showNotification","import { useRef, useState } from \"react\"\nimport { Howl } from \"howler\"\nexport default function useSoundPlayer() {\n    const [playerId, setPlayerId] = useState<number>(-1)\n    const playerRef = useRef<Howl | null>(null)\n\n    function play(sound: string, time: number) {\n        playerRef.current = new Howl({ src: [sound] })\n        const handleId = playerRef.current.play()\n        if (time) {\n            setTimeout(() => {\n                if (!playerRef.current) return\n                playerRef.current.stop(handleId)\n            }, time*1000);\n        }\n        setPlayerId(handleId)\n    }\n\n    function pause() {\n        if (!playerRef.current) return\n        playerRef.current.pause(playerId)\n    }\n\n    function stop() {\n        if (!playerRef.current) return\n        playerRef.current.stop(playerId)\n    }\n\n    return { play, pause, stop }\n\n}","const getItem = <T>(key: string): T | null => {\r\n  const stringifiedData = localStorage.getItem(key);\r\n  if (!stringifiedData) return null;\r\n  const parsedData = JSON.parse(stringifiedData);\r\n  return parsedData;\r\n};\r\n\r\nconst setItem = (key: string, data: { [key: string]: any }): void => {\r\n  localStorage.setItem(key, JSON.stringify(data));\r\n};\r\n\r\nconst removeItem = (key: string): void => {\r\n  localStorage.removeItem(key);\r\n};\r\n\r\nconst ls = { getItem, setItem, removeItem };\r\n\r\nexport { ls as localStorage };\r\n","import { useRef, useState } from \"react\";\nimport { v1 as uuidv1 } from \"uuid\";\nimport { localStorage } from \"../utils/localStorage\";\n\ntype Timer = { id: string; name: string; time: number };\ntype TimerStore = {\n  [id: string]: Timer;\n};\n\nexport default function useTimerStore() {\n  const [timerStore, setTimerStore] = useState<TimerStore>({});\n\n  function addTimer(name: string, time: number): Timer {\n    const id = uuidv1();\n    const newTimer = { id: id, name: name, time: time };\n    setTimerStore({ ...timerStore, [id]: newTimer });\n    saveTimerToStorage(newTimer);\n    return newTimer;\n  }\n  function getTimer(id: string): Timer {\n    const timer = timerStore[id];\n    return timer;\n  }\n  function deleteTimer(id: string) {\n    const newTimerStore = { ...timerStore };\n    delete newTimerStore[id];\n    deleteTimeFromStorage(id);\n    setTimerStore(newTimerStore);\n  }\n\n  function loadTimerFromStorage(id: string) {\n    const timer = localStorage.getItem<Timer>(id);\n    if (!timer) return null;\n    return timer;\n  }\n\n  function saveTimerToStorage(timer: Timer) {\n    localStorage.setItem(timer.id, timer);\n  }\n\n  function deleteTimeFromStorage(id: string) {\n    localStorage.removeItem(id);\n  }\n\n  function init(idList: string[]) {\n    const timerStore: TimerStore = {};\n    idList.forEach((id) => {\n      const timer = loadTimerFromStorage(id);\n      if (timer) timerStore[id] = timer;\n    });\n    setTimerStore(timerStore);\n  }\n\n  function updateTimer(id: string, opts: any) {\n    const newTimerStore = { ...timerStore };\n    newTimerStore[id].name = opts.name || newTimerStore[id].name;\n    newTimerStore[id].time = opts.time || newTimerStore[id].time;\n    saveTimerToStorage(newTimerStore[id]);\n    setTimerStore(newTimerStore);\n  }\n\n  return {\n    init,\n    addTimer,\n    getTimer,\n    deleteTimer,\n    updateTimer,\n    timerStore,\n  };\n}\n","import { useEffect, useState } from \"react\";\r\nimport { localStorage } from \"../utils/localStorage\";\r\nimport useTimerStore from \"./useTimerStore\";\r\n\r\ntype TimerGroupStore = {\r\n  id: string;\r\n  name: string;\r\n  timers: string[];\r\n};\r\n\r\nexport default function useTimerGroup(id: string, name = \"unname\") {\r\n  const [timerGroupStore, setTimerGroupStore] = useState<TimerGroupStore>({\r\n    id: id,\r\n    name: name,\r\n    timers: [],\r\n  });\r\n  //   const [timerStore, setTimerStore] = useState<TimerStore>({});\r\n  const {\r\n    init,\r\n    addTimer,\r\n    getTimer,\r\n    deleteTimer,\r\n    updateTimer,\r\n    timerStore,\r\n  } = useTimerStore();\r\n\r\n  //get localstorage data if any\r\n  useEffect(() => {\r\n    if (!id) return;\r\n    const savedTimerGroupStoreData = loadTimerGroupFromLocalStorage(id);\r\n    if (!savedTimerGroupStoreData) return;\r\n    setTimerGroupStore(savedTimerGroupStoreData);\r\n\r\n    const timersList = savedTimerGroupStoreData.timers;\r\n    init(timersList);\r\n  }, [id]);\r\n\r\n  const saveTimerGroupToLocalStorage = (timerGroup: TimerGroupStore) => {\r\n    localStorage.setItem(timerGroup.id, timerGroup);\r\n  };\r\n\r\n  const deleteTimerGroupFromLocalStorage = (timerGroup: TimerGroupStore) => {\r\n    localStorage.removeItem(timerGroup.id);\r\n  };\r\n\r\n  const loadTimerGroupFromLocalStorage = (\r\n    id: string\r\n  ): TimerGroupStore | null => {\r\n    const timerGroup = localStorage.getItem<TimerGroupStore>(id);\r\n    return timerGroup;\r\n  };\r\n\r\n  function addTimerInGroup(name: string, time: number) {\r\n    const newTimer = addTimer(name, time);\r\n    const newTimerGroups: TimerGroupStore = { ...timerGroupStore };\r\n    newTimerGroups.timers.push(newTimer.id);\r\n    saveTimerGroupToLocalStorage(newTimerGroups);\r\n    setTimerGroupStore(newTimerGroups);\r\n    return newTimerGroups;\r\n  }\r\n\r\n  function deleteTimerFromGroup(timerId: string) {\r\n    const newTimerGroupsStore = { ...timerGroupStore };\r\n    const newTimerList = newTimerGroupsStore.timers.filter(\r\n      (_timerId) => _timerId !== timerId\r\n    );\r\n    if (newTimerList.length !== newTimerGroupsStore.timers.length)\r\n      deleteTimer(timerId);\r\n    newTimerGroupsStore.timers = newTimerList;\r\n    saveTimerGroupToLocalStorage(newTimerGroupsStore);\r\n    setTimerGroupStore(newTimerGroupsStore);\r\n    return newTimerGroupsStore;\r\n  }\r\n\r\n  function deleteTimerGroup() {\r\n    const timersList = timerGroupStore.timers;\r\n    timersList.forEach((timerId: string) => {\r\n      deleteTimer(timerId);\r\n    });\r\n    deleteTimerGroupFromLocalStorage(timerGroupStore);\r\n  }\r\n\r\n  function changeGroupName(newName: string) {\r\n    if (!newName) return;\r\n    setTimerGroupStore({ ...timerGroupStore, name: newName });\r\n    saveTimerGroupToLocalStorage({\r\n      ...timerGroupStore,\r\n      name: newName,\r\n    });\r\n  }\r\n\r\n  return {\r\n    addTimerInGroup,\r\n    deleteTimerFromGroup,\r\n    deleteTimerGroup,\r\n    changeGroupName,\r\n    timerGroupStore,\r\n    updateTimer,\r\n    getTimer,\r\n    timerStore,\r\n  };\r\n}\r\n","export default __webpack_public_path__ + \"static/media/alarm.4ef57659.mp3\";","import React, { useState } from \"react\";\nimport Timer from \"../timer/Timer\";\nimport close from \"./close.svg\";\n\nimport { PlayButton } from \"./playButton\";\nimport { LoopButton } from \"./loopButton\";\nimport StopButton from \"./stopButton\";\n\nimport useTimerCard from \"../../hooks/useTimerCards\";\n\nexport default function TimerCard(props) {\n  const { onDelete, timerCardId } = props;\n  const { ...timerCard } = useTimerCard(props.timerCardId);\n  const [editTitle, setEditTitle] = useState(() => false);\n\n  return (\n    <div className=\"mx-4 my-1 bg-white elevation-2 rounded-lg\">\n      <div\n        className=\"p-2 border rounded-lg border-gray-300\"\n        style={{\n          width: \"25%\",\n          minWidth: \"265px\",\n          maxWidth: \"265px\",\n        }}\n      >\n        <div className=\"flex flex-row-reverse\">\n          <button\n            className=\"select-none outline-none rounded-full transition duration-150 hover:elevation-2 transform hover:scale-110\"\n            // className=\"btn btn-danger\"\n            onClick={() => {\n              timerCard.deleteTimerCard();\n              onDelete(timerCardId);\n            }}\n          >\n            <img className=\"h-6 w-auto\" src={close} />\n          </button>\n        </div>\n        <div>\n          <div className=\"text-7xl font-mono tracking-tighter font-medium text-center select-none\">\n            {parseInt(timerCard.runningTimer.remainingTime / 60) <= 9\n              ? \"0\" + parseInt(timerCard.runningTimer.remainingTime / 60)\n              : parseInt(timerCard.runningTimer.remainingTime / 60)}\n            :\n            {timerCard.runningTimer.remainingTime % 60 <= 9\n              ? \"0\" + (timerCard.runningTimer.remainingTime % 60)\n              : timerCard.runningTimer.remainingTime % 60}\n          </div>\n          <hr />\n          <div className=\"flex flex-row justify-between mx-2\">\n            <div className=\"text-center font-medium cursor-pointer\">\n              <div onClick={() => setEditTitle(true)}>\n                {editTitle ? (\n                  <form\n                    onSubmit={(event) => {\n                      event.preventDefault();\n                      const title = event.currentTarget.title.value;\n                      if (title) {\n                        timerCard.changeTimerCardName(title);\n                      }\n                      setEditTitle(false);\n                    }}\n                    onBlur={(event) => {\n                      event.preventDefault();\n                      const title = event.currentTarget.title.value;\n                      if (title) {\n                        timerCard.changeTimerCardName(title);\n                      }\n                      setEditTitle(false);\n                    }}\n                  >\n                    <input autoFocus type=\"text\" name=\"title\" />\n                  </form>\n                ) : (\n                  timerCard.timerCardData.name\n                )}\n              </div>\n            </div>\n            <div className=\"px-0 user-select-none\">\n              <LoopButton\n                looping={timerCard.timerCardData.looping}\n                onChange={() => timerCard.toggleLooping()}\n              />\n            </div>\n          </div>\n          <div className=\"flex\">\n            <div className=\" mx-2 h-8 w-auto my-1\">\n              <PlayButton\n                isPlaying={timerCard.timerCardData.status === \"playing\"}\n                onChange={(state) => {\n                  const action = state\n                    ? timerCard.playCard\n                    : timerCard.pausecard;\n                  action();\n                }}\n              />\n            </div>\n            <StopButton\n              isStopped={timerCard.timerCardData.status === \"stopped\"}\n              onChange={(isStopped) => {\n                if (isStopped) timerCard.stopCard();\n              }}\n            />\n          </div>\n          {timerCard.timerCardData.timers.map((timerId) => {\n            const timer = timerCard.timerStore[timerId];\n            return (\n              <Timer\n                key={timer.id}\n                id={timer.id}\n                active={timerCard.runningTimer?.currentTimerId === timer?.id}\n                onDelete={(timerId) => {\n                  timerCard.removeTimer(timerId);\n                }}\n                onNameChange={\n                  (newName) => timerCard.changeTimerName(timerId, newName)\n                }\n                onTimeChange={(newTime) =>\n                  timerCard.chanageTimerTime(timerId,newTime)\n                }\n                name={timer.name}\n                time={timer.time}\n              />\n            );\n          })}\n          <div className=\"flex justify-center mt-4\">\n            <button\n              className=\" bg-blue-600 px-4 py-1 rounded-md text-white select-none transition duration-150 hover:elevation-4 transform hover:scale-110 hover:bg-blue-700\"\n              onClick={() => {\n                timerCard.addTimer(\"unaname\", 300);\n              }}\n            >\n              Add Timer\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport CountdownTimer from \"../lib/countdownTimer\";\nimport showNotification from \"../utils/notification\";\nimport useSoundPlayer from \"./useSoundPlayer\";\nimport useTimerGroup from \"./useTimerGroup\";\n//@ts-ignore\nimport defaultSound from \"./alarm.mp3\";\nimport { localStorage } from \"../utils/localStorage\";\n\nexport default function useTimerCard(id: string, name = \"Unnamed\") {\n  const { timerGroupStore, timerStore, ...timerGroup } = useTimerGroup(\n    id,\n    name\n  );\n  const [timerCardData, setTimerCardData] = useState({\n    looping: false,\n    status: \"stopped\",\n  });\n  const [runningTimer, setRunningTimer] = useState({\n    currentTimerId: \"\",\n    remainingTime: 0,\n    time: 0,\n  });\n  const countdownTimerRef = useRef(new CountdownTimer());\n  const [onTimerFinished, setOnTimerFinished] = useState(false); //everytime var change it value from false to true next timer is played if constraints satisfied\n  const runningTimerRef = useRef(runningTimer); //only used for purpose of storing data to save it later in localstorage\n  const timerCardDataRef = useRef(timerCardData); //only used when storing data to local storage\n  const { play, pause, stop } = useSoundPlayer();\n  //to save running timer data before it is closed\n  useEffect(() => {\n    const onPageHide = () => {\n      localStorage.setItem(\"runningTimerData\" + id, runningTimerRef.current);\n      localStorage.setItem(\"timerCardData\" + id, timerCardDataRef.current);\n    };\n    window.addEventListener(\"pagehide\", onPageHide);\n    return () => {\n      window.removeEventListener(\"pagehide\", onPageHide);\n    };\n  }, [id]);\n\n  useEffect(() => {\n    const onTick = (remainingTime: number) => {\n      setRunningTimer(({ ...runningTimerData }): any => {\n        const newData = { ...runningTimerData, remainingTime: remainingTime };\n        return newData;\n      });\n    };\n    const countdownTimer = countdownTimerRef.current;\n    countdownTimer.on(\"tick\", onTick);\n\n    return () => {\n      countdownTimer.off(\"tick\", onTick);\n    };\n  }, []);\n\n  useEffect(() => {\n    runningTimerRef.current = runningTimer;\n  }, [runningTimer]);\n\n  useEffect(() => {\n    timerCardDataRef.current = {\n      ...timerCardData,\n      status: timerCardData.status === \"stopped\" ? \"stopped\" : \"paused\",\n    };\n  }, [timerCardData]);\n\n  useEffect(() => {\n    if (!onTimerFinished) return;\n\n    const timerList = timerGroupStore.timers;\n    const indexofFinishedTimer = timerList.indexOf(runningTimer.currentTimerId);\n    let nextTimer = timerStore[timerList[indexofFinishedTimer + 1]];\n    //to check wheter last timer\n    if (!nextTimer) {\n      //if looping is disabled change status to stopped and do noting\n      if (timerCardData.looping === false) {\n        setTimerCardData({ ...timerCardData, status: \"stopped\" });\n        setRunningTimer({\n          ...runningTimer,\n          remainingTime: 0,\n          currentTimerId: \"\",\n        });\n        setOnTimerFinished(false);\n        return;\n      }\n\n      //get the first timer and set it as running timer\n      nextTimer = timerStore[timerList[0]];\n\n      setRunningTimer({\n        currentTimerId: nextTimer.id,\n        remainingTime: nextTimer.time,\n        time: nextTimer.time,\n      });\n    }\n    setRunningTimer({\n      currentTimerId: nextTimer.id,\n      remainingTime: nextTimer.time,\n      time: nextTimer.time,\n    });\n\n    playCard(nextTimer.id);\n    setOnTimerFinished(false);\n\n    return () => {};\n  }, [onTimerFinished]);\n\n  useEffect(() => {\n    const parsedTimerCardData = localStorage.getItem(\"timerCardData\" + id);\n    if (parsedTimerCardData) {\n      //@ts-ignore\n      setTimerCardData(parsedTimerCardData);\n    }\n\n    const parsedRunningTimerData = localStorage.getItem(\n      \"runningTimerData\" + id\n    );\n    if (parsedRunningTimerData) {\n      //@ts-ignore\n      setRunningTimer(parsedRunningTimerData);\n    }\n  }, [id]);\n\n  const playCard = (currentTimerId = \"\") => {\n    currentTimerId =\n      currentTimerId || ((runningTimer.currentTimerId as unknown) as string);\n\n    //no currentTimerid might mean its first time playing\n    if (!currentTimerId) {\n      currentTimerId = timerGroupStore.timers[0] as string;\n      //if index 0 does not have current timer id it means card does not have timer hence do nothing\n      if (!currentTimerId) return;\n    }\n    const timerData = timerStore[currentTimerId];\n    //in off chance if currenttimerId is invalid do nothing\n    if (!timerData) return;\n\n    setRunningTimer({ ...runningTimer, currentTimerId: currentTimerId });\n    countdownTimerRef.current.off(\"finished\");\n    if (timerCardData.status === \"paused\") {\n      countdownTimerRef.current.play(runningTimer.remainingTime);\n    } else {\n      countdownTimerRef.current.play(timerData.time);\n    }\n    setTimerCardData({ ...timerCardData, status: \"playing\" });\n\n    countdownTimerRef.current.on(\"finished\", () => {\n      showNotification(\n        `${timerGroupStore.name} => ${timerData.name} | completed`\n      );\n      play(defaultSound, 2);\n\n      setOnTimerFinished(true);\n    });\n  };\n\n  const pausecard = () => {\n    setTimerCardData({ ...timerCardData, status: \"paused\" });\n    countdownTimerRef.current.stop();\n  };\n\n  const stopCard = () => {\n    countdownTimerRef.current.stop();\n    setTimerCardData({ ...timerCardData, status: \"stopped\" });\n    setRunningTimer({ ...runningTimer, remainingTime: 0, currentTimerId: \"\" });\n  };\n\n  const toggleLooping = () => {\n    const newTimerCardData = {\n      ...timerCardData,\n      looping: !timerCardData.looping,\n    };\n    setTimerCardData(newTimerCardData);\n    localStorage.setItem(\"timerCardData\" + id, newTimerCardData);\n  };\n\n  const deleteTimerCard = () => {\n    timerGroup.deleteTimerGroup();\n    localStorage.removeItem(\"runningTimerData\" + id);\n    localStorage.removeItem(\"timerCardData\" + id);\n  };\n\n  const addTimer = (name: string, time: number) => {\n    timerGroup.addTimerInGroup(name, time);\n  };\n\n  const removeTimer = (timerId: string) => {\n    timerGroup.deleteTimerFromGroup(timerId);\n  };\n\n  const changeTimerCardName = (newName: string) => {\n    timerGroup.changeGroupName(newName);\n  };\n  const changeTimerName = (timerId: string, newName: string) => {\n    timerGroup.updateTimer(timerId, { name: newName });\n  };\n  const chanageTimerTime = (timerId: string, newTime: number) => {\n    timerGroup.updateTimer(timerId, { time: newTime });\n  };\n\n  return {\n    addTimer,\n    changeTimerCardName,\n    removeTimer,\n    chanageTimerTime,\n    changeTimerName,\n    deleteTimerCard,\n    playCard,\n    pausecard,\n    stopCard,\n    toggleLooping,\n    timerStore,\n    timerCardData: { ...timerGroupStore, ...timerCardData },\n    runningTimer,\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { v1 as uuidv1 } from \"uuid\";\nimport TimerCard from \"./component/timerCard/TimerCard\";\n\nfunction App(props) {\n  const [timerCardsList, setTimerCardsList] = useState([]);\n  useEffect(() => {\n    const savedTimerCardList = localStorage.getItem(\"timerCardList\");\n    if (savedTimerCardList) {\n      setTimerCardsList(JSON.parse(savedTimerCardList));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"timerCardList\", JSON.stringify(timerCardsList));\n  }, [timerCardsList]);\n\n  useEffect(() => {\n    document.body.classList.remove(\"page-loading\");\n    document.body.classList.add(\"page-loaded\");\n    document.body.classList.add(\"bg-gray-50\");\n  }, []);\n\n  return (\n    <div>\n      <button\n        className=\"select-none bg-blue-600 text-white px-4 py-2 rounded-full\"\n        onClick={() => {\n          setTimerCardsList((prevTimerCardList) => [\n            ...prevTimerCardList,\n            uuidv1(),\n          ]);\n        }}\n      >\n        Add Timer Card\n      </button>\n\n      <div className=\"overflow-auto\">\n        <div className=\"flex\" style={{ alignItems: \"flex-start\" }}>\n          {timerCardsList.map((timerCardId) => (\n            <TimerCard\n              key={timerCardId}\n              timerCardId={timerCardId}\n              onDelete={(id) => {\n                setTimerCardsList((timerCardsList) =>\n                  timerCardsList.filter((timerId) => timerId !== id)\n                );\n              }}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\n\r\nconst SoundPlayerContext = React.createContext('');\r\nexport default SoundPlayerContext;","import { ReactNode } from \"react\";\r\nimport React from \"react\";\r\nimport SoundPlayerContext from \"../contexts/SoundPlayerContext\";\r\n\r\ntype Props = {\r\n    children: ReactNode;\r\n};\r\nexport default function SoundPlayerProvider(props: Props) {\r\n    const { children } = props\r\n    return (\r\n        <SoundPlayerContext.Provider value={'Himanshu'}>\r\n            {children}\r\n        </SoundPlayerContext.Provider>\r\n    );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n    window.addEventListener('activate', function (event) {\n      event.waitUntil(\n        caches.keys().then(function (cacheNames) {\n          return Promise.all(\n            cacheNames.filter(function (cacheName) {\n              // Return true if you want to remove this cache,\n              // but remember that caches are shared across\n              // the whole origin\n            }).map(function (cacheName) {\n              return caches.delete(cacheName)\n            })\n          )\n        })\n      )\n    })\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport SoundPlayerProvider from \"./providers/SoundPlayerProvider\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SoundPlayerProvider>\n      <App />\n    </SoundPlayerProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}