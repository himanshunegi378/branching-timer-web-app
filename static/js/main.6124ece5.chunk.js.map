{"version":3,"sources":["component/timer/style.module.scss","component/timerCard/style.module.scss","timeWorker.js","component/timer/close.svg","component/timer/Timer.jsx","component/timerCard/close.svg","component/timerCard/playButton.jsx","component/timerCard/loopButton.jsx","component/timerCard/stopButton.jsx","utils/localStorage.ts","contexts/TimerCards/storage.ts","lib/event.js","lib/countdownTimer.ts","lib/soundPlayer/SoundPlayer.ts","utils/notification.ts","contexts/TimerCards/alarm.mp3","lib/audio-storage/MetaStorage.ts","lib/audio-storage/AudioStorage.ts","contexts/TimerCards/TimerCard.ts","contexts/TimerCards/TimerCards.context.tsx","component/timerCard/TimerCard.jsx","hooks/useAudioRecorder.tsx","contexts/TimerCards/hooks/useTimerCard.tsx","App.jsx","contexts/TimerCards/hooks/useCreateTimerCard.tsx","serviceWorker.js","contexts/audioContext.tsx","providers/storage/sound-id-storage.ts","providers/storage/sound-storage.ts","providers/audioProvider.tsx","index.js","App.module.scss"],"names":["module","exports","code","initialTime","self","performance","now","setInterval","gapSeconds","currentTime","elapsedSeconds","Math","floor","calcGapSeconds","i","postMessage","toString","substring","indexOf","lastIndexOf","blob","Blob","type","timeWorker","URL","createObjectURL","Timer","props","onNameChange","onTimeChange","onDelete","onRecordStart","onRecordStop","id","name","time","active","useState","mins","setMins","secs","setSecs","editTitle","setEditTitle","isRecording","setIsRecording","useEffect","minutes","parseInt","seconds","className","style","timer","timer__active","title","onClick","onSubmit","event","preventDefault","currentTarget","value","onBlur","autoFocus","autoComplete","defaultValue","src","close","alt","width","placeholder","onChange","e","target","PlayButton","isPlaying","test","fill","height","version","xmlns","x","y","viewBox","d","LoopButton","looping","enableBackground","StopButton","isStopped","localforage","setDriver","INDEXEDDB","LOCALSTORAGE","ls","getItem","key","a","setItem","data","removeItem","timerCardIDsStorage","timercardIds","localStorage","timerCardStorage","timerCardId","timerCardData","Eventjs","events","this","numEventNames","arguments","length","arg","TypeError","Error","ReferenceError","checkEventName","eventName","on","listener","push","off","iEventName","hasOwnProperty","currListener","currHandlerIndex","splice","trigger","argumentList","listeners","errors","j","lis","apply","error","newError","console","log","worker","Worker","CountdownTimer","playing","tick","setTimeout","stop","addEventListener","removeEventListener","SoundPlayer","player","handleId","undefined","sound","Howl","format","volume","play","pause","createNotfication","options","Notification","navigator","serviceWorker","getRegistration","then","registration","showNotification","catch","err","window","permission","body","vibrate","requestPermission","alert","MetaStorage","meta","audioStorage","metaStorage","ids","audioBlob","loadAudioIds","savedAudioIds","saveAudioIds","save","filter","savedId","delete","editedMeta","load","TimerCard","countDownTimer","runningTimer","audioPlayer","onTimerTick","remainingTime","emitRunningTimer","onTimerFinished","currentTimerId","currentTimer","currentTimerIndex","timerGroup","timers","findIndex","timerFinished","nextTimer","updateCardData","draftCardData","totalTime","emit","playCard","draft","status","firstTimer","pauseCard","stopCard","v4","emitTimerCardData","cb","produce","timerId","cardName","timerData","find","audioId","defaultSound","draftTimerCardData","IdOfTimerToRemove","map","existingAudioId","newName","deleteStorageData","removeAllListeners","JSON","parse","stringify","draftcardData","promises","forEach","Promise","all","EventEmitter","TimeCardsContext","React","createContext","Timercards","actions","timerCardsId","TimerCardsProvider","TimerCardsRef","useRef","setTimerCardsId","setupNewTimerCard","useCallback","timerCard","current","onPageOpen","onPageClose","deleteTimerCard","onTimerCardDelete","Provider","addTimerCard","timercardId","newTimerCard","children","mediaStream","mediaRecorder","mediaChunks","setAudioBlob","mediaDevices","getUserMedia","audio","video","MediaRecorder","mimeType","size","sampleChunk","start","record","stopRecording","getTracks","track","sameplChunk","useAudioRecorder","useContext","setTimerCardData","setRunningTimer","setTimerCard","updateTimerCardData","updateRunningTimer","useTimerCard","renameTimerCard","toggleLoop","state","removeTimer","editTimer","newTime","addAudioToTimer","add_button","addTimer","App","allTimerCardsId","createTimerCard","useCreateTimerCard","document","classList","remove","add","container","header","hs","alignItems","item","href","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","AudioStoreContext","audioStore","addAudio","deleteAudio","soundsIdStorage","soundStorage","AudioProvider","setAudioStore","soundIds","audioData","init","Object","keys","prevAudioStore","draftAudioStore","ReactDOM","render","StrictMode","getElementById","process","origin","waitUntil","caches","cacheNames","cacheName","fetch","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6124ece5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"style_timer__3lsD1\",\"title\":\"style_title__3_VNy\",\"timer__active\":\"style_timer__active__2EszR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_button\":\"style_add_button___aU4-\"};","const workercode = () => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    let initialTime = self.performance.now()\r\n\r\n    const calcGapSeconds = () => {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        const currentTime = self.performance.now()\r\n        const elapsedSeconds = Math.floor((currentTime - initialTime) / 1000)\r\n        if (elapsedSeconds !== 0) {\r\n            // eslint-disable-next-line no-restricted-globals\r\n            initialTime += elapsedSeconds * 1000\r\n        }\r\n        return elapsedSeconds\r\n    }\r\n    setInterval(() => {\r\n        const gapSeconds = calcGapSeconds()\r\n        for (let i = 0; i < gapSeconds; i++) {\r\n            // eslint-disable-next-line no-restricted-globals\r\n            self.postMessage(\"tick\")\r\n        }\r\n    }, 1000)\r\n}\r\n\r\nlet code = workercode.toString()\r\ncode = code.substring(code.indexOf(\"{\") + 1, code.lastIndexOf(\"}\"))\r\n\r\nconst blob = new Blob([code], { type: \"application/javascript\" })\r\nconst timeWorker = URL.createObjectURL(blob)\r\n\r\nmodule.exports = timeWorker\r\n","export default __webpack_public_path__ + \"static/media/close.96841b05.svg\";","import React, { useState, useEffect } from \"react\"\r\nimport close from \"./close.svg\"\r\nimport style from \"./style.module.scss\"\r\nfunction Timer(props) {\r\n    const {\r\n        onNameChange,\r\n        onTimeChange,\r\n        onDelete,\r\n        onRecordStart,\r\n        onRecordStop,\r\n        id,\r\n        name,\r\n        time,\r\n        active\r\n    } = props\r\n\r\n    const [mins, setMins] = useState(0)\r\n    const [secs, setSecs] = useState(0)\r\n    const [editTitle, setEditTitle] = useState(() => false)\r\n    const [isRecording, setIsRecording] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (!time) return\r\n        const minutes = parseInt(time / 60)\r\n        const seconds = parseInt(time % 60)\r\n        setMins(minutes)\r\n        setSecs(seconds)\r\n    }, [time])\r\n\r\n    return (\r\n        <div\r\n            id={props.id}\r\n            // className=\"my-1 px-2 pt-2 border rounded-lg border-gray-300\"\r\n            className={`my-1 rounded-lg ${style.timer} ${\r\n                active ? style.timer__active : \"\"\r\n            }`}\r\n        >\r\n            <div\r\n                className={`${style.title} w-full rounded-t-lg  border border-b-0 border-gray-300 px-1 `}\r\n            >\r\n                <div className={` flex flex-row justify-between items-center`}>\r\n                    <div onClick={() => setEditTitle(true)}>\r\n                        {editTitle ? (\r\n                            <form\r\n                                onSubmit={(event) => {\r\n                                    event.preventDefault()\r\n                                    setEditTitle(false)\r\n                                    onNameChange(\r\n                                        event.currentTarget.title.value\r\n                                    )\r\n                                }}\r\n                                onBlur={(event) => {\r\n                                    onNameChange(\r\n                                        event.currentTarget.title.value\r\n                                    )\r\n                                    setEditTitle(false)\r\n                                }}\r\n                            >\r\n                                <input\r\n                                    autoFocus\r\n                                    autoComplete={\"off\"}\r\n                                    type=\"text\"\r\n                                    defaultValue={name}\r\n                                    name=\"title\"\r\n                                />\r\n                            </form>\r\n                        ) : (\r\n                            name\r\n                        )}\r\n                    </div>\r\n                    <div className=\"ml-auto mr-4\">\r\n                        <button\r\n                            onClick={() => {\r\n                                const action = isRecording\r\n                                    ? onRecordStop\r\n                                    : onRecordStart\r\n                                action()\r\n                                setIsRecording(!isRecording)\r\n                            }}\r\n                        >\r\n                            {isRecording ? \"Stop\" : \"Record\"}\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <button\r\n                            className=\"select-none flex items-center rounded-full transition duration-150 hover:elevation-2 transform hover:scale-110\"\r\n                            onClick={() => {\r\n                                onDelete(id)\r\n                            }}\r\n                        >\r\n                            <img className=\"h-4 w-auto\" src={close} alt=\"\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"border border-t-0 rounded-b-lg  border-gray-300\">\r\n                {/* <div className={messageBgColor}>{TimerDetail.message}</div> */}\r\n                <form\r\n                    onSubmit={(event) => {\r\n                        event.preventDefault()\r\n                        const minutes = parseInt(event.currentTarget.mins.value)\r\n                        const seconds = parseInt(event.currentTarget.secs.value)\r\n                        let time = 0\r\n                        if (minutes) time += minutes * 60\r\n                        if (seconds) time += seconds\r\n                        onTimeChange(time)\r\n                    }}\r\n                    onBlur={(event) => {\r\n                        const minutes = parseInt(event.currentTarget.mins.value)\r\n                        const seconds = parseInt(event.currentTarget.secs.value)\r\n                        let time = 0\r\n                        if (minutes) time += minutes * 60\r\n                        if (seconds) time += seconds\r\n                        onTimeChange(time)\r\n                    }}\r\n                    className=\"text-center py-2\"\r\n                >\r\n                    <input\r\n                        name=\"mins\"\r\n                        style={{ width: \"3em\" }}\r\n                        type=\"number\"\r\n                        placeholder=\"m\"\r\n                        onChange={(e) => setMins(e.target.value)}\r\n                        value={mins}\r\n                    />\r\n                    <span className=\"mx-1\">:</span>\r\n                    <input\r\n                        name=\"secs\"\r\n                        style={{ width: \"3em\" }}\r\n                        type=\"number\"\r\n                        placeholder=\"s\"\r\n                        onChange={(e) => setSecs(e.target.value)}\r\n                        value={secs}\r\n                    />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","export default __webpack_public_path__ + \"static/media/close.96841b05.svg\";","import React from \"react\"\r\n\r\nfunction PlayButton(props) {\r\n    const { isPlaying = false, onChange = () => {} } = props\r\n\r\n    return (\r\n        <div\r\n            test=\"playButton\"\r\n            className=\"cursor-pointer\"\r\n            onClick={() => {\r\n                onChange(!isPlaying)\r\n            }}\r\n        >\r\n            {isPlaying ? (\r\n                <svg\r\n                    style={{ fill: \"#007bff\" }}\r\n                    className=\"h-8 w-auto\"\r\n                    height=\"512\"\r\n                    version=\"1.1\"\r\n                    id=\"Capa_1\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    x=\"0px\"\r\n                    y=\"0px\"\r\n                    viewBox=\"0 0 477.867 477.867\"\r\n                >\r\n                    <g>\r\n                        <g>\r\n                            <path\r\n                                d=\"M187.733,0H51.2c-9.426,0-17.067,7.641-17.067,17.067V460.8c0,9.426,7.641,17.067,17.067,17.067h136.533\r\n\t\t\tc9.426,0,17.067-7.641,17.067-17.067V17.067C204.8,7.641,197.159,0,187.733,0z M170.667,443.733h-102.4v-409.6h102.4V443.733z\"\r\n                            />\r\n                        </g>\r\n                    </g>\r\n                    <g>\r\n                        <g>\r\n                            <path\r\n                                d=\"M426.667,0H290.133c-9.426,0-17.067,7.641-17.067,17.067V460.8c0,9.426,7.641,17.067,17.067,17.067h136.533\r\n\t\t\tc9.426,0,17.067-7.641,17.067-17.067V17.067C443.733,7.641,436.092,0,426.667,0z M409.6,443.733H307.2v-409.6h102.4V443.733z\"\r\n                            />\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n            ) : (\r\n                <svg\r\n                    style={{ fill: \"#007bff\" }}\r\n                    className=\"h-8 w-auto\"\r\n                    height=\"512\"\r\n                    version=\"1.1\"\r\n                    id=\"Capa_1\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    x=\"0px\"\r\n                    y=\"0px\"\r\n                    viewBox=\"0 0 477.886 477.886\"\r\n                >\r\n                    <g>\r\n                        <g>\r\n                            <path\r\n                                d=\"M476.091,231.332c-1.654-3.318-4.343-6.008-7.662-7.662L24.695,1.804C16.264-2.41,6.013,1.01,1.8,9.442\r\n\t\t\tc-1.185,2.371-1.801,4.986-1.8,7.637v443.733c-0.004,9.426,7.633,17.07,17.059,17.075c2.651,0.001,5.266-0.615,7.637-1.8\r\n\t\t\tL468.429,254.22C476.865,250.015,480.295,239.768,476.091,231.332z M34.133,433.198V44.692l388.506,194.253L34.133,433.198z\"\r\n                            />\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayButton\r\nexport { PlayButton }\r\n","import React from \"react\";\n\nfunction LoopButton(props) {\n  const { looping = false, onChange = () => {} } = props;\n  return (\n    <div className='cursor-pointer'\n      onClick={() => {\n        onChange(!looping);\n      }}\n    >\n      {looping ? (\n        <svg\n          className=\"h-8 w-auto\"\n          style={{ fill: \"#007bff\" }}\n          id=\"Layer\"\n          enableBackground=\"new 0 0 64 64\"\n          height=\"512\"\n          viewBox=\"0 0 64 64\"\n          width=\"512\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"m19 25h9c1.104 0 2-.896 2-2s-.896-2-2-2h-9c-6.065 0-11 4.935-11 11s4.935 11 11 11h4.172l-1.586 1.586c-.781.781-.781 2.047 0 2.828.391.391.902.586 1.414.586s1.023-.195 1.414-.586l5-5c.781-.781.781-2.047 0-2.828l-5-5c-.781-.781-2.047-.781-2.828 0s-.781 2.047 0 2.828l1.586 1.586h-4.172c-3.859 0-7-3.141-7-7 0-3.86 3.141-7 7-7z\" />\n          <path d=\"m45 21h-4.172l1.586-1.586c.781-.781.781-2.047 0-2.828s-2.047-.781-2.828 0l-5 5c-.781.781-.781 2.047 0 2.828l5 5c.391.391.902.586 1.414.586s1.023-.195 1.414-.586c.781-.781.781-2.047 0-2.828l-1.586-1.586h4.172c3.859 0 7 3.14 7 7 0 3.859-3.141 7-7 7h-9c-1.104 0-2 .896-2 2s.896 2 2 2h9c6.065 0 11-4.935 11-11s-4.935-11-11-11z\" />\n        </svg>\n      ) : (\n        <svg\n          className=\"h-8 w-auto\"\n          style={{ fill: \" #dadada\" }}\n          id=\"Layer\"\n          enableBackground=\"new 0 0 64 64\"\n          height=\"512\"\n          viewBox=\"0 0 64 64\"\n          width=\"512\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"m19 25h9c1.104 0 2-.896 2-2s-.896-2-2-2h-9c-6.065 0-11 4.935-11 11s4.935 11 11 11h4.172l-1.586 1.586c-.781.781-.781 2.047 0 2.828.391.391.902.586 1.414.586s1.023-.195 1.414-.586l5-5c.781-.781.781-2.047 0-2.828l-5-5c-.781-.781-2.047-.781-2.828 0s-.781 2.047 0 2.828l1.586 1.586h-4.172c-3.859 0-7-3.141-7-7 0-3.86 3.141-7 7-7z\" />\n          <path d=\"m45 21h-4.172l1.586-1.586c.781-.781.781-2.047 0-2.828s-2.047-.781-2.828 0l-5 5c-.781.781-.781 2.047 0 2.828l5 5c.391.391.902.586 1.414.586s1.023-.195 1.414-.586c.781-.781.781-2.047 0-2.828l-1.586-1.586h4.172c3.859 0 7 3.14 7 7 0 3.859-3.141 7-7 7h-9c-1.104 0-2 .896-2 2s.896 2 2 2h9c6.065 0 11-4.935 11-11s-4.935-11-11-11z\" />\n        </svg>\n      )}\n    </div>\n  );\n}\n\nexport default LoopButton;\nexport { LoopButton };\n","import React from 'react'\n\nfunction StopButton(props) {\n    const { isStopped, onChange = () => { } } = props\n    return (\n        <div test='stopButton' className='cursor-pointer' onClick={() => onChange(!isStopped)}>\n            {isStopped\n                ? <div className='mx-2 h-auto my-1' style={{ width: '2rem' }}>\n                    <svg style={{ fill: '#dadada' }} className='h-8 w-auto' id=\"Capa_1\" enableBackground=\"new 0 0 512 512\" height=\"512\" viewBox=\"0 0 512 512\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m256 0c-141.159 0-256 114.841-256 256s114.841 256 256 256 256-114.841 256-256-114.841-256-256-256zm115 356c0 8.284-6.716 15-15 15h-200c-8.284 0-15-6.716-15-15v-200c0-8.284 6.716-15 15-15h200c8.284 0 15 6.716 15 15z\" /><path d=\"m171 171h170v170h-170z\" /></g></svg>\n                </div>\n                : <div className='mx-2 h-auto my-1' style={{ width: '2rem' }} >\n                    <svg className='h-8 w-auto' style={{ fill: '#007bff' }} id=\"Capa_1\" enableBackground=\"new 0 0 512 512\" height=\"512\" viewBox=\"0 0 512 512\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m256 0c-141.159 0-256 114.841-256 256s114.841 256 256 256 256-114.841 256-256-114.841-256-256-256zm115 356c0 8.284-6.716 15-15 15h-200c-8.284 0-15-6.716-15-15v-200c0-8.284 6.716-15 15-15h200c8.284 0 15 6.716 15 15z\" /><path d=\"m171 171h170v170h-170z\" /></g></svg>\n                </div>}\n        </div>\n    )\n}\n\nexport default StopButton\nexport { StopButton }\n","import localforage from \"localforage\"\r\nlocalforage.setDriver([localforage.INDEXEDDB, localforage.LOCALSTORAGE])\r\nconst getItem = async <T>(key: string): Promise<T | null> => {\r\n    return localforage.getItem(key)\r\n}\r\n\r\nconst setItem = (key: string, data: { [key: string]: any }) => {\r\n    return localforage.setItem(key, data)\r\n}\r\n\r\nconst removeItem = (key: string) => {\r\n    return localforage.removeItem(key)\r\n}\r\n\r\nconst ls = { getItem, setItem, removeItem }\r\n\r\nexport { ls as localStorage }\r\n","import { localStorage } from \"../../utils/localStorage\"\r\nimport { TimerCard } from \"./TimerCards.types\"\r\n\r\nexport const timerCardIDsStorage = {\r\n    save: (timercardIds: string[]) => {\r\n        return localStorage.setItem(`timerCardIds`, timercardIds)\r\n    },\r\n    load: () => {\r\n        return localStorage.getItem<string[]>(`timerCardIds`)\r\n    },\r\n    delete: () => {\r\n        return localStorage.removeItem(`timerCardIds`)\r\n    }\r\n}\r\n\r\nexport const timerCardStorage = {\r\n    save: (timerCardId: string, timerCardData: TimerCard) => {\r\n        return localStorage.setItem(`timerCard_${timerCardId}`, timerCardData)\r\n    },\r\n    load: (timerCardId: string) => {\r\n        return localStorage.getItem<TimerCard>(`timerCard_${timerCardId}`)\r\n    },\r\n    delete: (timerCardId: string) => {\r\n        return localStorage.removeItem(`timerCard_${timerCardId}`)\r\n    }\r\n}\r\n","/**\n * Creates an event manager object. This function can be called with or without \"new\" keyword.\n * If it is called with \"new\", the resulting object can be used stand alone or attached to another object.\n * If it is called without \"new\", the target object should be passed as a parameter.\n * Eventjs attaches three functions to its target:\n *   on(), off(), trigger()\n * The parameters can be string or object. Strings represent event names and object represents the object that is\n * applied to the event listeners as their 'this'\n * Duplicate event strings are allowed though it doesn't have any useful application!\n * Duplicate target objects is allowed too. The last one will be set as the target.\n * If no target object is specified, the listener functions will be called with their 'this' set to the current instance\n * of eventjs object.\n * @throws TypeError if any of the variables has a type other than string or object\n * @throws Error if there is no event name strings in the parameter\n * @throws ReferenceError if this instance is not created with the 'new' keyword and no object is passed as the target\n * @constructor\n */\n/**\n * Creates an event manager object. This function can be called with or without \"new\" keyword.\n * If it is called with \"new\", the resulting object can be used stand alone or attached to another object.\n * If it is called without \"new\", the target object should be passed as a parameter.\n * Eventjs attaches three functions to its target:\n *   on(), off(), trigger()\n * The parameters can be string or object. Strings represent event names and object represents the object that is\n * applied to the event listeners as their 'this'\n * Duplicate event strings are allowed though it doesn't have any useful application!\n * Duplicate target objects is allowed too. The last one will be set as the target.\n * If no target object is specified, the listener functions will be called with their 'this' set to the current instance\n * of eventjs object.\n * @throws TypeError if any of the variables has a type other than string or object\n * @throws Error if there is no event name strings in the parameter\n * @throws ReferenceError if this instance is not created with the 'new' keyword and no object is passed as the target\n * @constructor\n */\nexport class Eventjs {\n    constructor( /* list of at least event names and one optional target object (in any order) */) {\n        var events = {};\n        var target = this;\n        var numEventNames = 0;\n        for (var i = 0; i < arguments.length; i++) {\n            var arg = arguments[i];\n            switch (typeof arg) {\n                case 'string':\n                    events[arg] = [ /*list of event listeners */];\n                    numEventNames++;\n                    break;\n                case 'object':\n                    target = arg; // 'this' for the listeners\n                    break;\n                default:\n                    throw new TypeError('Eventjs() only accepts string and object parameters');\n                    \n            }\n        }\n\n        if (numEventNames === 0) {\n            throw new Error('There should be at least one event name (string) for the Eventjs to be useful.');\n        }\n\n        if ((target === this) && !(this instanceof Eventjs)) {\n            throw new ReferenceError('Eventjs is not called with \"new\" keyword and no parameter of type object is passed to it');\n        }\n\n        /**\n         * if there is no such event, throw an exception\n         * @throws ReferenceError if the event name is not registered in this handler when this Eventjs object was created\n         */\n        function checkEventName(eventName) {\n            \n            if (typeof eventName !== 'string' || !events[eventName]) {\n                throw new ReferenceError('The event name does not exist in this event manager: ' + eventName);\n            }\n            return true;\n        }\n\n        /**\n         * registers an event listener\n         */\n        target.on = function (eventName /*, one or more listeners... */) {\n            \n            checkEventName(eventName);\n            //add every handler to the list of events for this particular event name\n            for (var i = 1; i < arguments.length; i++) {\n                var listener = arguments[i];\n                //if this handler doesn't already exist in the list add it\n                if (events[eventName].indexOf(listener) === -1) {\n                    events[eventName].push(listener);\n                }\n            }\n            return this;\n        };\n\n        /**\n         * un-register a handler from an event name. if handler is missing, all handlers will be removed\n         */\n        target.off = function (eventName /*, one or more listeners... */) {\n            \n            switch (arguments.length) {\n                case 0: //no event name specified. remove all event listeners\n                    for (var iEventName in events) {\n                        if (events.hasOwnProperty(iEventName)) {\n                            target.off(iEventName);\n                        }\n                    }\n                    break;\n                case 1: //only the event name specified. remove all event listeners for this particular event\n                    checkEventName(eventName);\n                    events[eventName].length = 0;\n                    break;\n                default: //remove the specified event listeners for the specified event name\n                    checkEventName(eventName);\n                    //add every handler to the list of events for this particular event name\n                    for (var i = 1; i < arguments.length; i++) {\n                        var currListener = arguments[i];\n                        //if this handler doesn't already exist in the list add it\n                        var currHandlerIndex = events[eventName].indexOf(currListener);\n                        if (currHandlerIndex !== -1) {\n                            events[eventName].splice(currHandlerIndex, 1);\n                        }\n                    }\n                    break;\n            }\n            return this;\n        };\n\n        /**\n         * triggers a handler with a list of arguments. Any argument to the event handler can follow the eventName.\n         * If an error prevents a listener from running, the other\n         * listeners will run anyway. After the execution is complete, the trigger() function throws an array containing\n         * information about those errors.\n         * @throws Error if any of the event listeners was interrupted with an exception. The resulting error object has a\n         *         errors property which can be used to investigate the details of the errors.\n         *         It is an array of array of exception objects which give information about which listener was interrupted\n         *         with an exception. Each element of this array contains a 'listener' and an 'error' key.\n         */\n        target.trigger = function (eventName /*, optional list of arguments to be passed to event handler */) {\n            \n            checkEventName(eventName);\n            var argumentList = [];\n            //add all the arguments after the first argument to this list (firs argument is the eventName)\n            for (var i = 1; i < arguments.length; i++) {\n                argumentList.push(arguments[i]);\n            }\n            var listeners = events[eventName];\n            var errors = [];\n            //now run the events that are explicityly registered with this event manager\n            for (var j = 0; j < listeners.length; j++) {\n                var lis = listeners[j];\n                try {\n                    lis.apply(target, argumentList);\n                } catch (e) {\n                    errors.push({\n                        listener: lis,\n                        error: e\n                    });\n                }\n            }\n            if (errors.length > 0) {\n                var newError = new Error('At least one of the event listeners was interrupted with an error. See errors');\n                console.log(errors)\n                newError.errors = errors;\n                throw newError;\n            }\n            return this;\n        };\n\n        return target;\n    }\n}","import timeWorker from \"../timeWorker\"\r\nimport { Eventjs } from \"./event\"\r\n\r\nconst worker = new Worker(timeWorker)\r\n\r\nclass CountdownTimer extends Eventjs {\r\n    private time: number\r\n    private playing: boolean\r\n    constructor() {\r\n        super(\"tick\", \"finished\")\r\n        this.time = 0\r\n        this.playing = false //to prevent triggering finished event more than once\r\n    }\r\n\r\n    tick = (e: MessageEvent) => {\r\n        //wrapped in settimeout so if there are many eventlistenere on worker\r\n        //they dont block other codes from executing\r\n        setTimeout(() => {\r\n            if (!this.playing) return\r\n\r\n            if (this.time < 0) {\r\n                this.stop()\r\n                this.trigger(\"finished\")\r\n            } else {\r\n                this.trigger(\"tick\", this.time)\r\n            }\r\n            this.time--\r\n        }, 0)\r\n    }\r\n\r\n    play(time: number) {\r\n        this.time = time\r\n        this.playing = true\r\n        worker.addEventListener(\"message\", this.tick)\r\n    }\r\n\r\n    stop() {\r\n        worker.removeEventListener(\"message\", this.tick)\r\n        this.playing = false\r\n        this.time = 0\r\n    }\r\n}\r\n\r\nexport default CountdownTimer\r\n","import { Howl } from \"howler\"\r\n\r\nexport class SoundPlayer {\r\n    private player: Howl | undefined\r\n    handleId: number | undefined\r\n    constructor() {\r\n        this.player = undefined\r\n        this.handleId = undefined\r\n    }\r\n\r\n    play(sound: string, time?: number) {\r\n        if (!sound) {\r\n            return false\r\n        }\r\n        this.player = new Howl({\r\n            src: [sound],\r\n            format: [\"webm\"],\r\n            volume: 1\r\n        })\r\n        this.handleId = this.player.play()\r\n        if (time) {\r\n            setTimeout(() => {\r\n                if (!this.player) return\r\n                this.player.stop(this.handleId)\r\n            }, time * 1000)\r\n        }\r\n        return true\r\n    }\r\n\r\n    pause() {\r\n        this.player?.pause(this.handleId)\r\n    }\r\n\r\n    stop() {\r\n        this.player?.stop(this.handleId)\r\n    }\r\n}\r\n","function showNotification(title: string) {\r\n  if (!(\"Notification\" in window)) {\r\n    alert(\"This browser does not support desktop notification\");\r\n  }\r\n\r\n  // Let's check whether notification permissions have already been granted\r\n  else if (Notification.permission === \"granted\") {\r\n    // If it's okay let's create a notification\r\n    return createNotfication(\"TimerCards\", {\r\n      body: title,\r\n      vibrate: [200, 100, 200, 100, 200, 100, 200],\r\n    });\r\n  }\r\n\r\n  // Otherwise, we need to ask the user for permission\r\n  else if (Notification.permission !== \"denied\") {\r\n    Notification.requestPermission().then(function (permission) {\r\n      // If the user accepts, let's create a notification\r\n      if (permission === \"granted\") {\r\n        return createNotfication(\"TimerCards\", {\r\n          body: title,\r\n          vibrate: [200, 100, 200, 100, 200, 100, 200],\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction createNotfication(\r\n  title: string,\r\n  options?: NotificationOptions | undefined\r\n) {\r\n  try {\r\n    new Notification(title, options);\r\n    return true;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  navigator.serviceWorker\r\n    .getRegistration()\r\n    .then(function (registration) {\r\n      if (!registration) return false;\r\n      registration.showNotification(\"TimerCards\", options);\r\n      return true;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      return false;\r\n    });\r\n}\r\n\r\nexport default showNotification;\r\n","export default __webpack_public_path__ + \"static/media/alarm.4ef57659.mp3\";","import { localStorage } from \"../../utils/localStorage\"\r\n\r\nexport type MetaType = {\r\n    name: string\r\n    id: string\r\n}\r\n\r\nexport class MetaStorage {\r\n    save(id: string, meta: MetaType) {\r\n        return localStorage.setItem(`audio_meta_${id}`, meta)\r\n    }\r\n    load(id: string) {\r\n        return localStorage.getItem<MetaType>(`audio_meta_${id}`)\r\n    }\r\n    delete(id: string) {\r\n        return localStorage.removeItem(`audio_meta_${id}`)\r\n    }\r\n}\r\n","import { localStorage } from \"../../utils/localStorage\"\r\nimport { MetaStorage, MetaType } from \"./MetaStorage\"\r\n\r\nclass AudioStorage {\r\n    private metaStorage: MetaStorage\r\n    constructor() {\r\n        this.metaStorage = new MetaStorage()\r\n    }\r\n    loadAudioIds() {\r\n        return localStorage.getItem<string[]>(\"audioIds\")\r\n    }\r\n    private saveAudioIds(ids: string[]) {\r\n        return localStorage.setItem(\"audioIds\", ids)\r\n    }\r\n\r\n    async save(id: string, audioBlob: Blob[], meta: Omit<MetaType, \"id\">) {\r\n        const savedAudioIds = (await this.loadAudioIds()) || []\r\n        savedAudioIds.push(id)\r\n        await this.saveAudioIds(savedAudioIds)\r\n\r\n        await this.metaStorage.save(id, { ...meta, id })\r\n        return localStorage.setItem(`audio_${id}`, audioBlob)\r\n    }\r\n\r\n    load(id: string) {\r\n        return localStorage.getItem<Blob[]>(`audio_${id}`)\r\n    }\r\n    async delete(id: string) {\r\n        const savedAudioIds = (await this.loadAudioIds()) || []\r\n        await this.saveAudioIds(\r\n            savedAudioIds.filter((savedId) => savedId !== id)\r\n        )\r\n\r\n        await this.metaStorage.delete(id)\r\n        return localStorage.removeItem(`audio_${id}`)\r\n    }\r\n\r\n    editMeta(id: string, editedMeta: MetaType) {\r\n        return this.metaStorage.save(id, editedMeta)\r\n    }\r\n    loadMeta(id: string) {\r\n        return this.metaStorage.load(id)\r\n    }\r\n}\r\n\r\nexport const audioStorage = new AudioStorage()\r\n","import EventEmitter from \"events\"\r\nimport produce from \"immer\"\r\nimport { v4 } from \"uuid\"\r\nimport CountdownTimer from \"../../lib/countdownTimer\"\r\nimport { SoundPlayer } from \"../../lib/soundPlayer/SoundPlayer\"\r\nimport showNotification from \"../../utils/notification\"\r\nimport { timerCardStorage } from \"./storage\"\r\nimport { Timer, TimerCard as TimerCardType } from \"./TimerCards.types\"\r\n//@ts-ignore\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport defaultSound from \"./alarm.mp3\"\r\nimport { audioStorage } from \"../../lib/audio-storage/AudioStorage\"\r\n\r\ntype runningTimerType = {\r\n    id: string\r\n    remainingTime: number\r\n}\r\nexport class TimerCard extends EventEmitter {\r\n    timerCardData: TimerCardType\r\n    timerCardId: string\r\n    countDownTimer: CountdownTimer\r\n    runningTimer: runningTimerType\r\n    audioPlayer: SoundPlayer\r\n    constructor(timerCardId: string) {\r\n        super()\r\n        this.timerCardId = timerCardId\r\n        this.timerCardData = {\r\n            id: this.timerCardId,\r\n            timerGroup: { id: v4(), name: \"unnamed\", timers: [] },\r\n            looping: false,\r\n            status: \"stopped\",\r\n            currentTimer: undefined\r\n        }\r\n        this.load()\r\n        this.audioPlayer = new SoundPlayer()\r\n        this.runningTimer = {\r\n            id: \"\",\r\n            remainingTime: 0\r\n        }\r\n        this.countDownTimer = new CountdownTimer()\r\n        this.on(\"new_connection\", () => {\r\n            this.emitTimerCardData()\r\n            this.emitRunningTimer()\r\n        })\r\n        this.on(\"_play\", () => {\r\n            this.playCard()\r\n        })\r\n        this.on(\"_stop\", () => {\r\n            this.stopCard()\r\n        })\r\n    }\r\n\r\n    //will be ivoked on anychange to timercardata\r\n    private emitTimerCardData() {\r\n        this.emit(\"timer_data\", this.timerCardData)\r\n    }\r\n    //will be invoked on any change to runningTimer data\r\n    private emitRunningTimer() {\r\n        this.emit(\"running_timer\", { ...this.runningTimer })\r\n    }\r\n\r\n    private updateCardData(cb: (draftTimerCard: TimerCardType) => void) {\r\n        this.timerCardData = produce(this.timerCardData, cb)\r\n        this.emitTimerCardData()\r\n        this.save()\r\n    }\r\n\r\n    private async timerFinished(timerId: string) {\r\n        const cardName = this.timerCardData.timerGroup.name\r\n        const timerData = this.timerCardData.timerGroup.timers.find(\r\n            (timer) => timer.id === timerId\r\n        )\r\n        showNotification(`${cardName} => ${timerData?.name} finished`)\r\n        const audioId = timerData?.options.audioId\r\n        if (audioId) {\r\n            const audioBlob = await audioStorage.load(audioId)\r\n            this.audioPlayer.play(URL.createObjectURL(audioBlob))\r\n        } else {\r\n            this.audioPlayer.play(defaultSound, 2)\r\n        }\r\n    }\r\n\r\n    addTimer(timerData: Omit<Timer, \"id\" | \"options\">) {\r\n        const { name, time } = timerData\r\n        this.updateCardData((draftTimerCardData) => {\r\n            draftTimerCardData.timerGroup.timers.push({\r\n                id: v4(),\r\n                name: name,\r\n                time: time,\r\n                options: {}\r\n            })\r\n        })\r\n    }\r\n\r\n    removeTimer(IdOfTimerToRemove: string) {\r\n        this.updateCardData((draftTimerCardData) => {\r\n            draftTimerCardData.timerGroup.timers =\r\n                draftTimerCardData?.timerGroup.timers.filter(\r\n                    (timer) => timer.id !== IdOfTimerToRemove\r\n                )\r\n        })\r\n    }\r\n\r\n    toggleLoop() {\r\n        this.updateCardData((draftTimerCardData) => {\r\n            draftTimerCardData.looping = !draftTimerCardData.looping\r\n        })\r\n    }\r\n\r\n    editTimer(timerId: string, options: Omit<Timer, \"id\" | \"options\">) {\r\n        this.updateCardData((draftCardData) => {\r\n            const timers = draftCardData.timerGroup.timers.map((timer) => {\r\n                if (timer.id !== timerId) return timer\r\n                return { ...timer, ...options }\r\n            })\r\n            draftCardData.timerGroup.timers = timers\r\n        })\r\n    }\r\n    async addAudioToTimer(timerId: string, audioBlob: Blob[]) {\r\n        const timer = this.timerCardData.timerGroup.timers.find(\r\n            (timer) => timer.id === timerId\r\n        )\r\n        const audioId = v4()\r\n        await audioStorage.save(audioId, audioBlob, {\r\n            name: `${timer?.name}_${audioId}`\r\n        })\r\n\r\n        //check and delete existing audio\r\n\r\n        const existingAudioId = timer?.options.audioId\r\n        existingAudioId && (await audioStorage.delete(existingAudioId))\r\n\r\n        //add new audoio id\r\n        this.updateCardData((draft) => {\r\n            draft.timerGroup.timers = draft.timerGroup.timers.map((timer) => {\r\n                if (timerId !== timer.id) {\r\n                    return timer\r\n                } else {\r\n                    timer.options.audioId = audioId\r\n                    return timer\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    async removeAudioFromTimer(timerId: string) {}\r\n\r\n    renameTimerCard(newName: string) {\r\n        this.updateCardData((draftCardData) => {\r\n            draftCardData.timerGroup.name = newName\r\n        })\r\n    }\r\n\r\n    private onTimerTick = (remainingTime: number) => {\r\n        this.runningTimer.remainingTime = remainingTime\r\n        this.emitRunningTimer()\r\n    }\r\n\r\n    private onTimerFinished = () => {\r\n        try {\r\n            const currentTimerId = this.timerCardData.currentTimer?.id\r\n            const currentTimerIndex =\r\n                this.timerCardData.timerGroup.timers.findIndex(\r\n                    (timer) => timer.id === currentTimerId\r\n                )\r\n\r\n            this.timerFinished(this.timerCardData.currentTimer!.id)\r\n\r\n            //check if current timer is last timer\r\n            if (this.timerCardData.timerGroup.timers[currentTimerIndex + 1]) {\r\n                const nextTimer =\r\n                    this.timerCardData.timerGroup.timers[currentTimerIndex + 1]\r\n                this.updateCardData((draftCardData) => {\r\n                    draftCardData.currentTimer = {\r\n                        id: nextTimer.id,\r\n                        remainingTime: nextTimer.time,\r\n                        totalTime: nextTimer.time\r\n                    }\r\n                })\r\n                this.emit(\"_play\")\r\n            } else {\r\n                //--if loop is on get the first one else stop timer card\r\n                if (this.timerCardData.looping) {\r\n                    const nextTimer = this.timerCardData.timerGroup.timers[0]\r\n                    this.updateCardData((draftCardData) => {\r\n                        draftCardData.currentTimer = {\r\n                            id: nextTimer.id,\r\n                            remainingTime: nextTimer.time,\r\n                            totalTime: nextTimer.time\r\n                        }\r\n                    })\r\n                    this.emit(\"_play\")\r\n                } else {\r\n                    this.emit(\"_stop\")\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n            console.log(this.timerCardData)\r\n        }\r\n    }\r\n    playCard = () => {\r\n        if (this.timerCardData.currentTimer) {\r\n            this.updateCardData((draft) => {\r\n                draft.status = \"playing\"\r\n            })\r\n            this.runningTimer.id = this.timerCardData.currentTimer.id\r\n            this.runningTimer.remainingTime =\r\n                this.timerCardData.currentTimer!.remainingTime\r\n            this.emitRunningTimer()\r\n            this.countDownTimer.off(\"tick\")\r\n            this.countDownTimer.off(\"finished\")\r\n            this.countDownTimer.on(\"tick\", this.onTimerTick)\r\n            this.countDownTimer.on(\"finished\", this.onTimerFinished)\r\n            this.countDownTimer.play(\r\n                this.timerCardData.currentTimer!.remainingTime\r\n            )\r\n        } else {\r\n            const firstTimer = this.timerCardData.timerGroup.timers[0]\r\n            if (firstTimer) {\r\n                this.updateCardData((draft) => {\r\n                    draft.currentTimer = {\r\n                        id: firstTimer.id,\r\n                        remainingTime: firstTimer.time,\r\n                        totalTime: firstTimer.time\r\n                    }\r\n                    draft.status = \"playing\"\r\n                })\r\n                this.runningTimer.id = this.timerCardData.currentTimer!.id\r\n                this.runningTimer.remainingTime =\r\n                    this.timerCardData.currentTimer!.remainingTime\r\n                this.emitRunningTimer()\r\n                this.countDownTimer.off(\"tick\")\r\n                this.countDownTimer.off(\"finished\")\r\n                this.countDownTimer.on(\"tick\", this.onTimerTick)\r\n                this.countDownTimer.on(\"finished\", this.onTimerFinished)\r\n                this.countDownTimer.play(\r\n                    this.timerCardData.currentTimer!.remainingTime\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    pauseCard = () => {\r\n        this.countDownTimer.stop()\r\n        this.updateCardData((draftCardData) => {\r\n            draftCardData.status = \"paused\"\r\n            draftCardData.currentTimer!.remainingTime =\r\n                this.runningTimer.remainingTime\r\n        })\r\n    }\r\n\r\n    stopCard = () => {\r\n        this.countDownTimer.stop()\r\n        this.runningTimer = { id: \"\", remainingTime: 0 }\r\n        this.updateCardData((draftCardData) => {\r\n            draftCardData.status = \"stopped\"\r\n            draftCardData.currentTimer = undefined\r\n        })\r\n        this.emitRunningTimer()\r\n    }\r\n\r\n    async onTimerCardDelete() {\r\n        this.countDownTimer.stop()\r\n        this.countDownTimer.off(\"tick\")\r\n        this.countDownTimer.off(\"finished\")\r\n        await this.deleteStorageData()\r\n        this.removeAllListeners()\r\n    }\r\n    save() {\r\n        const timerCardData: TimerCardType = JSON.parse(\r\n            JSON.stringify(this.timerCardData)\r\n        )\r\n        if (timerCardData.status === \"playing\") {\r\n            timerCardData.status = \"paused\"\r\n            timerCardData.currentTimer!.remainingTime =\r\n                this.runningTimer.remainingTime\r\n        }\r\n        timerCardStorage.save(this.timerCardId, timerCardData)\r\n    }\r\n    private async load() {\r\n        const timerCardData = await timerCardStorage.load(this.timerCardId)\r\n        if (timerCardData) {\r\n            this.timerCardData = timerCardData\r\n            this.updateCardData((draftcardData) => undefined)\r\n            if (timerCardData.currentTimer) {\r\n                this.runningTimer = {\r\n                    id: timerCardData.currentTimer.id,\r\n                    remainingTime: timerCardData.currentTimer.remainingTime\r\n                }\r\n                this.emitRunningTimer()\r\n            }\r\n        }\r\n    }\r\n    private async deleteStorageData() {\r\n        const promises: Promise<any>[] = []\r\n        this.timerCardData.timerGroup.timers.forEach((timer) => {\r\n            const audioId = timer.options.audioId\r\n            if (audioId) {\r\n                promises.push(audioStorage.delete(audioId))\r\n            }\r\n        })\r\n        await Promise.all(promises)\r\n        return timerCardStorage.delete(this.timerCardId)\r\n    }\r\n}\r\n","import React, { PropsWithChildren, useEffect, useRef, useState } from \"react\"\r\nimport { timerCardIDsStorage } from \"./storage\"\r\nimport { TimerCard } from \"./TimerCard\"\r\nimport { useCallback } from \"react\"\r\nexport const TimeCardsContext = React.createContext<{\r\n    Timercards: Record<string, TimerCard>\r\n    actions: any\r\n    timerCardsId: string[]\r\n}>({\r\n    Timercards: {},\r\n    actions: {},\r\n    timerCardsId: []\r\n})\r\n\r\nexport function TimerCardsProvider(props: PropsWithChildren<{}>) {\r\n    const TimerCardsRef = useRef<Record<string, TimerCard>>({})\r\n    const [timerCardsId, setTimerCardsId] = useState<string[]>([])\r\n\r\n    const setupNewTimerCard = useCallback((id: string) => {\r\n        const timerCard = new TimerCard(id)\r\n        return timerCard\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        //on web page load get timercard data from storage and initalize tiemrcards\r\n        const onPageOpen = async () => {\r\n            const timerCardsId = await timerCardIDsStorage.load()\r\n            if (!timerCardsId) return\r\n\r\n            timerCardsId.forEach((id) => {\r\n                if (!id) return\r\n                const timerCard = setupNewTimerCard(id)\r\n\r\n                TimerCardsRef.current[id] = timerCard\r\n            })\r\n            setTimerCardsId(timerCardsId)\r\n        }\r\n        onPageOpen()\r\n    }, [setupNewTimerCard])\r\n\r\n    useEffect(() => {\r\n        //save data on page close\r\n\r\n        const onPageClose = () => {\r\n            timerCardIDsStorage.save(timerCardsId)\r\n            timerCardsId.forEach((id) => {\r\n                TimerCardsRef.current[id].save()\r\n            })\r\n        }\r\n        window.addEventListener(\"beforeunload\", onPageClose)\r\n        return () => {\r\n            window.removeEventListener(\"beforeunload\", onPageClose)\r\n        }\r\n    }, [timerCardsId])\r\n\r\n    const addTimerCard = (timercardId: string) => {\r\n        const newTimerCard = setupNewTimerCard(timercardId)\r\n        TimerCardsRef.current[timercardId] = newTimerCard\r\n        setTimerCardsId((ids) => [...ids, timercardId])\r\n    }\r\n\r\n    const deleteTimerCard = async (timerCardId: string) => {\r\n        await TimerCardsRef.current[timerCardId].onTimerCardDelete()\r\n        delete TimerCardsRef.current[timerCardId]\r\n        setTimerCardsId((ids) => ids.filter((id) => id !== timerCardId))\r\n    }\r\n\r\n    // const addAudio = (timerId: string, audioBlob: Blob[]) => {\r\n    //     const audioId = addAudio()\r\n    // }\r\n\r\n    return (\r\n        <TimeCardsContext.Provider\r\n            value={{\r\n                Timercards: TimerCardsRef.current,\r\n                timerCardsId,\r\n                actions: {\r\n                    addTimerCard,\r\n                    deleteTimerCard\r\n                }\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TimeCardsContext.Provider>\r\n    )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport Timer from \"../timer/Timer\"\r\nimport close from \"./close.svg\"\r\nimport style from \"./style.module.scss\"\r\n\r\nimport { PlayButton } from \"./playButton\"\r\nimport { LoopButton } from \"./loopButton\"\r\nimport StopButton from \"./stopButton\"\r\n\r\nimport useAudioRecorder from \"../../hooks/useAudioRecorder\"\r\nimport { useTimerCard } from \"../../contexts/TimerCards\"\r\n\r\nexport default function TimerCard(props) {\r\n    const { onDelete, timerCardId, className } = props\r\n    const [editTitle, setEditTitle] = useState(() => false)\r\n    const { record, stopRecording } = useAudioRecorder()\r\n    const { timerCardData, runningTimer, actions } = useTimerCard(timerCardId)\r\n\r\n    if (!timerCardData) return <div></div>\r\n    return (\r\n        <div className={`bg-white rounded-lg ${className}`}>\r\n            <div className=\"flex flex-row-reverse\">\r\n                <button\r\n                    test=\"closeButton\"\r\n                    className=\"select-none outline-none rounded-full transition duration-150 hover:elevation-2 transform hover:scale-110\"\r\n                    onClick={() => {\r\n                        onDelete(timerCardId)\r\n                    }}\r\n                >\r\n                    <img className=\"h-6 w-auto\" src={close} alt=\"\" />\r\n                </button>\r\n            </div>\r\n            <div className='flex flex-col min-h-0'>\r\n                <div className=\"text-7xl font-mono tracking-tighter font-medium text-center select-none\">\r\n                    {parseInt(runningTimer.remainingTime / 60) <= 9\r\n                        ? \"0\" + parseInt(runningTimer.remainingTime / 60)\r\n                        : parseInt(runningTimer.remainingTime / 60)}\r\n                    :\r\n                    {runningTimer.remainingTime % 60 <= 9\r\n                        ? \"0\" + (runningTimer.remainingTime % 60)\r\n                        : runningTimer.remainingTime % 60}\r\n                </div>\r\n                <hr />\r\n                <div className=\"flex flex-row justify-between mx-2\">\r\n                    <div className=\"text-center font-medium cursor-pointer\">\r\n                        <div onClick={() => setEditTitle(true)}>\r\n                            {editTitle ? (\r\n                                <form\r\n                                    onSubmit={(event) => {\r\n                                        event.preventDefault()\r\n                                        const title =\r\n                                            event.currentTarget.title.value\r\n                                        if (title) {\r\n                                            actions.renameTimerCard(title)\r\n                                        }\r\n                                        setEditTitle(false)\r\n                                    }}\r\n                                    onBlur={(event) => {\r\n                                        event.preventDefault()\r\n                                        const title =\r\n                                            event.currentTarget.title.value\r\n                                        if (title) {\r\n                                            actions.renameTimerCard(title)\r\n                                        }\r\n                                        setEditTitle(false)\r\n                                    }}\r\n                                >\r\n                                    <input\r\n                                        autoFocus\r\n                                        type=\"text\"\r\n                                        name=\"title\"\r\n                                        defaultValue={\r\n                                            timerCardData.timerGroup.name\r\n                                        }\r\n                                    />\r\n                                </form>\r\n                            ) : (\r\n                                timerCardData.timerGroup.name\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"px-0 user-select-none\">\r\n                        <LoopButton\r\n                            looping={timerCardData?.looping}\r\n                            onChange={() => {\r\n                                actions.toggleLoop()\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex\">\r\n                    <div className=\" mx-2 h-8 w-auto my-1\">\r\n                        <PlayButton\r\n                            isPlaying={timerCardData?.status === \"playing\"}\r\n                            onChange={(state) => {\r\n                                if (state) {\r\n                                    actions.playCard()\r\n                                } else {\r\n                                    actions.pauseCard()\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <StopButton\r\n                        isStopped={timerCardData?.status === \"stopped\"}\r\n                        onChange={(isStopped) => {\r\n                            if (isStopped) actions.stopCard()\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className='overflow-auto fancy-scrollbar px-1  '>\r\n                    {timerCardData?.timerGroup?.timers.map((timer) => {\r\n                        if (!timer) return null\r\n                        return (\r\n                            <Timer\r\n                                key={timer.id}\r\n                                id={timer.id}\r\n                                active={runningTimer.id === timer.id}\r\n                                onDelete={(timerId) => {\r\n                                    actions.removeTimer(timer.id)\r\n                                }}\r\n                                onNameChange={(newName) => {\r\n                                    actions.editTimer(timer.id, {\r\n                                        name: newName\r\n                                    })\r\n                                }}\r\n                                onTimeChange={(newTime) => {\r\n                                    actions.editTimer(timer.id, {\r\n                                        time: newTime\r\n                                    })\r\n                                }}\r\n                                name={timer.name}\r\n                                time={timer.time}\r\n                                onRecordStart={() => {\r\n                                    record()\r\n                                }}\r\n                                onRecordStop={() => {\r\n                                    const audioBlob = stopRecording()\r\n                                    actions.addAudioToTimer(timer.id, audioBlob)\r\n                                }}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"flex justify-center mt-4\">\r\n                    <button\r\n                        test=\"addButton\"\r\n                        className={style.add_button}\r\n                        onClick={() => {\r\n                            actions.addTimer({ name: \"unnamed\", time: 60 })\r\n                        }}\r\n                    >\r\n                        Add Timer\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useRef, useState } from \"react\"\r\n\r\nexport default function useAudioRecorder() {\r\n    const mediaStream = useRef<MediaStream | null>(null)\r\n    const mediaRecorder = useRef<MediaRecorder | null>(null)\r\n    const mediaChunks = useRef<Blob[]>([])\r\n\r\n    const [audioBlob, setAudioBlob] = useState<Blob>()\r\n\r\n    async function record() {\r\n        mediaStream.current = await window.navigator.mediaDevices.getUserMedia({\r\n            audio: true,\r\n            video: false\r\n        })\r\n\r\n        mediaChunks.current = []\r\n        mediaRecorder.current = new MediaRecorder(mediaStream.current, {\r\n            mimeType: \"audio/webm\"\r\n        })\r\n\r\n        mediaRecorder.current.addEventListener(\"dataavailable\", function (e) {\r\n            if (e.data.size > 0) {\r\n                mediaChunks.current.push(e.data)\r\n            }\r\n        })\r\n\r\n        mediaRecorder.current.addEventListener(\"stop\", function (e) {\r\n            if (!mediaChunks.current) return\r\n            let [sampleChunk] = mediaChunks.current\r\n            setAudioBlob(\r\n                new Blob(mediaChunks.current, { type: sampleChunk.type })\r\n            )\r\n        })\r\n\r\n        mediaRecorder.current.start(100)\r\n    }\r\n\r\n    const stopRecording = function () {\r\n        if (mediaRecorder.current) {\r\n            mediaRecorder.current.stop()\r\n            mediaRecorder.current = null\r\n        }\r\n\r\n        if (mediaStream.current) {\r\n            mediaStream.current.getTracks().forEach((track) => track.stop())\r\n            mediaStream.current = null\r\n        }\r\n\r\n        const [sameplChunk] = mediaChunks.current\r\n        return new Blob(mediaChunks.current, { type: sameplChunk.type })\r\n    }\r\n\r\n    return { record, stopRecording, audioBlob }\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { TimerCard } from \"../TimerCard\"\r\nimport { TimeCardsContext } from \"../TimerCards.context\"\r\nimport { TimerCard as TimerCardType } from \"../TimerCards.types\"\r\n// import { useRunningTimer } from \"./useRunningTimer\"\r\n\r\nexport function useTimerCard(timerCardId: string) {\r\n    const { Timercards } = React.useContext(TimeCardsContext)\r\n    const [timerCardData, setTimerCardData] = useState<TimerCardType>()\r\n    const [runningTimer, setRunningTimer] = useState({\r\n        id: \"\",\r\n        remainingTime: 0\r\n    })\r\n    const [TimerCard, setTimerCard] = useState<TimerCard | null>(null)\r\n\r\n    useEffect(() => {\r\n        setTimerCard(Timercards[timerCardId])\r\n        return () => {\r\n            setTimerCard(null)\r\n        }\r\n    }, [Timercards, timerCardId])\r\n\r\n    useEffect(() => {\r\n        if (!TimerCard) return\r\n        const updateTimerCardData = (timerCardData: TimerCardType) => {\r\n            setTimerCardData(timerCardData)\r\n        }\r\n\r\n        const updateRunningTimer = (runningTimer: any) => {\r\n            setRunningTimer(runningTimer)\r\n        }\r\n\r\n        TimerCard.on(\"timer_data\", updateTimerCardData)\r\n        TimerCard.on(\"running_timer\", updateRunningTimer)\r\n\r\n        TimerCard.emit(\"new_connection\")\r\n        return () => {\r\n            TimerCard.off(\"timer_data\", updateTimerCardData)\r\n            TimerCard.off(\"running_timer\", updateRunningTimer)\r\n        }\r\n    }, [TimerCard])\r\n\r\n    return { timerCardData, runningTimer, actions: TimerCard }\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport style from \"./App.module.scss\"\r\nimport { v4 } from \"uuid\"\r\nimport TimerCard from \"./component/timerCard/TimerCard\"\r\nimport { useCreateTimerCard } from \"./contexts/TimerCards\"\r\n\r\nfunction App(props) {\r\n    const { allTimerCardsId, createTimerCard, deleteTimerCard } =\r\n        useCreateTimerCard()\r\n\r\n    useEffect(() => {\r\n        document.body.classList.remove(\"page-loading\")\r\n        document.body.classList.add(\"page-loaded\")\r\n        document.body.classList.add(\"bg-gray-50\")\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <section className={style.container}>\r\n                <div className={style.header}></div>\r\n\r\n                <div className={style.body}>\r\n                    <div\r\n                        className={` ${style.hs} fancy-scrollbar`}\r\n                        style={{ alignItems: \"flex-start\" }}\r\n                    >\r\n                        {allTimerCardsId.map((timerCardId) => {\r\n                            return (\r\n                                <TimerCard\r\n                                    className={style.item}\r\n                                    key={timerCardId}\r\n                                    timerCardId={timerCardId}\r\n                                    onDelete={(id) => {\r\n                                        deleteTimerCard(id)\r\n                                    }}\r\n                                />\r\n                            )\r\n                        })}\r\n                        <div className={style.item}>\r\n                            <button\r\n                                test=\"addTimerCardButton\"\r\n                                className=\"select-none bg-blue-600 text-white px-4 py-2 rounded-full\"\r\n                                onClick={() => {\r\n                                    createTimerCard(v4())\r\n                                }}\r\n                            >\r\n                                Add Timer Card\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section id=\"footer\" className=\"bg-gray-100 p-4\">\r\n                <h1 className=\"text-5xl font-bold text-center\">TimerCards</h1>\r\n                <p>\r\n                    I would love to hear your{\" \"}\r\n                    <a\r\n                        className=\"text-green-600\"\r\n                        href=\"mailto:davidxavier378@gmail.com\"\r\n                    >\r\n                        Feedback / Sugesstions\r\n                    </a>{\" \"}\r\n                </p>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\r\nimport { TimeCardsContext } from \"../TimerCards.context\"\r\n\r\n//It will be use to create timercards. It will provide id of all timercards in the system\r\nexport function useCreateTimerCard() {\r\n    const { actions, timerCardsId } = React.useContext(TimeCardsContext)\r\n\r\n    function createTimerCard(timerCardId: string) {\r\n        actions.addTimerCard(timerCardId)\r\n    }\r\n\r\n    function deleteTimerCard(timerCardId: string) {\r\n        actions.deleteTimerCard(timerCardId)\r\n    }\r\n\r\n    return {\r\n        allTimerCardsId: timerCardsId,\r\n        createTimerCard,\r\n        deleteTimerCard\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === \"[::1]\" ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(\r\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n        )\r\n)\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n        window.addEventListener(\"activate\", function (event) {\r\n            event.waitUntil(\r\n                caches.keys().then(function (cacheNames) {\r\n                    return Promise.all(\r\n                        cacheNames\r\n                            .filter(function (cacheName) {\r\n                                return false\r\n                                // Return true if you want to remove this cache,\r\n                                // but remember that caches are shared across\r\n                                // the whole origin\r\n                            })\r\n                            .map(function (cacheName) {\r\n                                return caches.delete(cacheName)\r\n                            })\r\n                    )\r\n                })\r\n            )\r\n        })\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served cache-first by a service \" +\r\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\")\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error during service worker registration:\", error)\r\n        })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { \"Service-Worker\": \"script\" }\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get(\"content-type\")\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null &&\r\n                    contentType.indexOf(\"javascript\") === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                \"No internet connection found. App is running in offline mode.\"\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister()\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import { createContext } from \"react\"\r\n\r\nexport type audioContextType = {\r\n    audioStore: { [id in string]: Blob[] }\r\n    addAudio: (audioBlob: Blob[]) => string\r\n    deleteAudio: (id: string) => void\r\n}\r\n\r\nexport const AudioStoreContext = createContext<audioContextType>({\r\n    audioStore: {},\r\n    addAudio: (audioBlob) => {\r\n        return \"\"\r\n    },\r\n    deleteAudio: (id: string) => {}\r\n})\r\n","import { localStorage } from \"../../utils/localStorage\"\r\n\r\nclass SoundsIdStorage {\r\n    save(ids: string[]) {\r\n        localStorage.setItem(\"soundIds\", ids)\r\n    }\r\n    load() {\r\n        return localStorage.getItem<string[]>(`soundIds`)\r\n    }\r\n    delete() {\r\n        localStorage.removeItem(`soundIds`)\r\n    }\r\n}\r\n\r\nexport const soundsIdStorage = new SoundsIdStorage()\r\n","import { localStorage } from \"../../utils/localStorage\"\r\n\r\nclass SoundStorage {\r\n    save(id: string, audioBlob: Blob[]) {\r\n        localStorage.setItem(`sound_${id}`, audioBlob)\r\n    }\r\n    load(id: string) {\r\n        return localStorage.getItem<Blob[]>(`sound_${id}`)\r\n    }\r\n    delete(id: string) {\r\n        localStorage.removeItem(`sound_${id}`)\r\n    }\r\n}\r\n\r\nexport const soundStorage = new SoundStorage()\r\n","import produce from \"immer\"\r\nimport React, {\r\n    PropsWithChildren,\r\n    useCallback,\r\n    useContext,\r\n    useEffect,\r\n    useState\r\n} from \"react\"\r\nimport { v4 } from \"uuid\"\r\nimport { AudioStoreContext } from \"../contexts/audioContext\"\r\nimport { soundsIdStorage } from \"./storage/sound-id-storage\"\r\nimport { soundStorage } from \"./storage/sound-storage\"\r\n\r\nexport default function AudioProvider(props: PropsWithChildren<{}>) {\r\n    const { children } = props\r\n    const [audioStore, setAudioStore] = useState<{ [id in string]: Blob[] }>({})\r\n\r\n    async function init() {\r\n        //loads aall audio from storage\r\n        const soundIds = await soundsIdStorage.load()\r\n        const promises: any[] = []\r\n        const audioData: { [id in string]: Blob[] } = {}\r\n        soundIds?.forEach((id) => {\r\n            promises.push(\r\n                soundStorage.load(id).then((audio) => {\r\n                    if (!audio) return\r\n                    audioData[id] = audio\r\n                })\r\n            )\r\n        })\r\n        await Promise.all(promises)\r\n        setAudioStore(audioData)\r\n    }\r\n    useEffect(() => {\r\n        init()\r\n    }, [])\r\n\r\n    function addAudio(audioBlob: Blob[]) {\r\n        const id = v4()\r\n        soundStorage.save(id, audioBlob)\r\n        setAudioStore((prevAudioStore) =>\r\n            produce(prevAudioStore, (draftAudioStore) => {\r\n                draftAudioStore[id] = audioBlob\r\n            })\r\n        )\r\n        return id\r\n    }\r\n\r\n    function deleteAudio(id: string) {\r\n        setAudioStore((prevAudioStore) =>\r\n            produce(prevAudioStore, (draftAudioStore) => {\r\n                delete draftAudioStore[id]\r\n            })\r\n        )\r\n        soundStorage.delete(id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        soundsIdStorage.save(Object.keys(audioStore))\r\n    }, [audioStore])\r\n\r\n    return (\r\n        <AudioStoreContext.Provider\r\n            value={{\r\n                audioStore,\r\n                addAudio,\r\n                deleteAudio\r\n            }}\r\n        >\r\n            {children}\r\n        </AudioStoreContext.Provider>\r\n    )\r\n}\r\n\r\nexport function useAudioStore() {\r\n    const { audioStore, addAudio, deleteAudio } = useContext(AudioStoreContext)\r\n\r\n    const getAudio = useCallback(\r\n        (id: string) => {\r\n            return audioStore[id]\r\n        },\r\n        [audioStore]\r\n    )\r\n    return { addAudio, getAudio, deleteAudio }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\nimport \"./index.css\"\r\nimport AudioProvider from \"./providers/audioProvider\"\r\nimport { TimerCardsProvider } from \"./contexts/TimerCards\"\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <AudioProvider>\r\n            <TimerCardsProvider>\r\n                <App />\r\n            </TimerCardsProvider>\r\n        </AudioProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hs\":\"App_hs__3g6EO\",\"item\":\"App_item__2XBCw\",\"container\":\"App_container__V-cl7\",\"body\":\"App_body__2JsLX\"};"],"sourceRoot":""}