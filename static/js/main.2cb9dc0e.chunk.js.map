{"version":3,"sources":["component/timer/close.svg","component/timer/Timer.jsx","component/timerCard/close.svg","component/timerCard/playButton.jsx","component/timerCard/loopButton.jsx","component/timerCard/stopButton.jsx","lib/countdownTimer.ts","lib/event.js","utils/notification.js","hooks/useSoundPlayer.tsx","utils/localStorage.ts","hooks/useTimerStore.tsx","hooks/useTimerGroup.tsx","hooks/alarm.mp3","hooks/useAudioRecorder.tsx","component/timerCard/TimerCard.jsx","hooks/useTimerCards.tsx","contexts/audioContext.tsx","providers/audioProvider.tsx","App.jsx","contexts/SoundPlayerContext.tsx","providers/SoundPlayerProvider.tsx","serviceWorker.js","index.js"],"names":["Timer","props","onNameChange","onTimeChange","onDelete","onRecordStart","onRecordStop","id","name","time","active","useState","mins","setMins","secs","setSecs","editTitle","setEditTitle","titleBgColor","setTitleBgColor","isRecording","setIsRecording","useEffect","minutes","parseInt","seconds","className","onClick","onSubmit","event","preventDefault","currentTarget","title","value","onBlur","autoFocus","autoComplete","type","src","close","style","width","placeholder","onChange","e","target","PlayButton","isPlaying","fill","height","version","xmlns","x","y","viewBox","d","LoopButton","looping","enableBackground","StopButton","isStopped","CountdownTimer","intervalId","this","stop","diff","start","Date","now","timer","trigger","window","setInterval","clearInterval","events","numEventNames","i","arguments","length","arg","TypeError","Error","Eventjs","ReferenceError","checkEventName","eventName","on","listener","indexOf","push","off","iEventName","hasOwnProperty","currListener","currHandlerIndex","splice","argumentList","listeners","errors","j","lis","apply","error","newError","console","log","createNotfication","Notification","showNotification","permission","requestPermission","then","alert","useSoundPlayer","playerId","setPlayerId","playerRef","useRef","play","sound","current","Howl","format","handleId","setTimeout","pause","localforage","setDriver","INDEXEDDB","LOCALSTORAGE","ls","getItem","key","a","setItem","data","removeItem","useTimerStore","timerStore","setTimerStore","loadTimerFromStorage","localStorage","saveTimerToStorage","timerIdList","promises","forEach","Promise","all","init","addTimer","newTimer","uuidv1","createTimer","getTimer","deleteTimer","newTimerStore","deleteTimeFromStorage","updateTimer","opts","useTimerGroup","timers","timerGroupStore","setTimerGroupStore","loadTimerGroupFromLocalStorage","savedTimerGroupStoreData","timersList","saveTimerGroupToLocalStorage","timerGroup","deleteTimerGroupFromLocalStorage","addTimerInGroup","newTimerGroups","deleteTimerFromGroup","timerId","newTimerGroupsStore","newTimerList","filter","_timerId","deleteTimerGroup","changeGroupName","newName","useAudioRecorder","mediaStream","mediaRecorder","mediaChunks","audioBlob","setAudioBlob","navigator","mediaDevices","getUserMedia","audio","video","MediaRecorder","mimeType","addEventListener","size","sampleChunk","Blob","record","stopRecording","getTracks","track","sameplChunk","TimerCard","timerCardId","status","alarmSound","timerCardData","setTimerCardData","currentTimerId","remainingTime","runningTimer","setRunningTimer","countdownTimerRef","onTimerFinished","setOnTimerFinished","runningTimerRef","timerCardDataRef","customSoundsRef","onPageHide","removeEventListener","onTick","runningTimerData","countdownTimer","timerList","indexofFinishedTimer","nextTimer","playCard","loadTimerCardDataFromStorage","useCallback","loadRunningTimerDataFromStorage","loadCustomSoundFromStorage","initTimerCard","parsedTimerCardData","parsedRunningTimerData","customSoundData","timerData","soundObjectUrl","URL","createObjectURL","defaultSound","addSound","changeTimerCardName","removeTimer","chanageTimerTime","newTime","changeTimerName","deleteTimerCard","pausecard","stopCard","toggleLooping","newTimerCardData","useTimerCard","timerCard","minWidth","maxWidth","state","map","AudioStoreContext","createContext","audioStore","addAudio","AudioProvider","children","setAudioStore","Provider","v4","App","timerCardsList","setTimerCardsList","savedTimerCardList","JSON","parse","stringify","document","body","classList","remove","add","useContext","prevTimerCardList","alignItems","SoundPlayerContext","React","SoundPlayerProvider","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","process","href","origin","waitUntil","caches","keys","cacheNames","cacheName","delete","fetch","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2cb9dc0e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/close.96841b05.svg\";","import React, { useState, useEffect } from \"react\";\nimport close from \"./close.svg\";\n\nfunction Timer(props) {\n  const {\n    onNameChange,\n    onTimeChange,\n    onDelete,\n    onRecordStart,\n    onRecordStop,\n    id,\n    name,\n    time,\n    active,\n  } = props;\n\n  const [mins, setMins] = useState();\n  const [secs, setSecs] = useState();\n  const [editTitle, setEditTitle] = useState(() => false);\n  const [titleBgColor, setTitleBgColor] = useState(\"alert-info\");\n  const [isRecording, setIsRecording] = useState(false);\n\n  useEffect(() => {\n    if (!time) return;\n    const minutes = parseInt(time / 60);\n    const seconds = parseInt(time % 60);\n    setMins(minutes);\n    setSecs(seconds);\n  }, [time]);\n\n  useEffect(() => {\n    if (active) {\n      setTitleBgColor(\"bg-red-100\");\n    } else {\n      setTitleBgColor(\"bg-blue-100\");\n    }\n  }, [active]);\n\n  return (\n    <div\n      id={props.id}\n      // className=\"my-1 px-2 pt-2 border rounded-lg border-gray-300\"\n      className={`my-1 rounded-lg ${active ? \"elevation-4 \" : \"elevation-1\"}`}\n    >\n      <div\n        className={`${titleBgColor} w-full rounded-t-lg  border border-b-0 border-gray-300 px-1 `}\n      >\n        <div className={`flex flex-row justify-between items-center`}>\n          <div onClick={() => setEditTitle(true)}>\n            {editTitle ? (\n              <form\n                onSubmit={(event) => {\n                  event.preventDefault();\n                  setEditTitle(false);\n                  onNameChange(event.currentTarget.title.value);\n                }}\n                onBlur={(event) => {\n                  onNameChange(event.currentTarget.title.value);\n                  setEditTitle(false);\n                }}\n              >\n                <input\n                  autoFocus\n                  autoComplete={\"off\"}\n                  type=\"text\"\n                  name=\"title\"\n                />\n              </form>\n            ) : (\n              name\n            )}\n          </div>\n          <div className='ml-auto mr-4'>\n            <button\n              onClick={() => {\n                const action = isRecording ? onRecordStop : onRecordStart;\n                action();\n                setIsRecording(!isRecording);\n              }}\n            >\n              {isRecording ? 'Stop' : 'Record'}\n            </button>\n          </div>\n          <div>\n            <button\n              className=\"select-none flex items-center rounded-full transition duration-150 hover:elevation-2 transform hover:scale-110\"\n              onClick={() => {\n                onDelete(id);\n              }}\n            >\n              <img className=\"h-4 w-auto\" src={close} />\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"border border-t-0 rounded-b-lg  border-gray-300\">\n        {/* <div className={messageBgColor}>{TimerDetail.message}</div> */}\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            const minutes = parseInt(event.currentTarget.mins.value);\n            const seconds = parseInt(event.currentTarget.secs.value);\n            let time = 0;\n            if (minutes) time += minutes * 60;\n            if (seconds) time += seconds;\n            onTimeChange(time);\n          }}\n          onBlur={(event) => {\n            const minutes = parseInt(event.currentTarget.mins.value);\n            const seconds = parseInt(event.currentTarget.secs.value);\n            let time = 0;\n            if (minutes) time += minutes * 60;\n            if (seconds) time += seconds;\n            onTimeChange(time);\n          }}\n          className=\"text-center py-2\"\n        >\n          <input\n            name=\"mins\"\n            style={{ width: \"3em\" }}\n            type=\"number\"\n            placeholder=\"m\"\n            onChange={(e) => setMins(e.target.value)}\n            value={mins}\n          />\n          <span className=\"mx-1\">:</span>\n          <input\n            name=\"secs\"\n            style={{ width: \"3em\" }}\n            type=\"number\"\n            placeholder=\"s\"\n            onChange={(e) => setSecs(e.target.value)}\n            value={secs}\n          />\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Timer;\n","export default __webpack_public_path__ + \"static/media/close.96841b05.svg\";","import React from 'react'\n\nfunction PlayButton(props) {\n    const { isPlaying = false, onChange = () => { } } = props\n\n\n    return (\n        <div className='cursor-pointer' onClick={() => { onChange(!isPlaying) }}>\n            {isPlaying\n                ?\n                <svg style={{ fill: '#007bff' }} className='h-8 w-auto' height=\"512\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                    viewBox=\"0 0 477.867 477.867\" >\n                    <g>\n                        <g>\n                            <path d=\"M187.733,0H51.2c-9.426,0-17.067,7.641-17.067,17.067V460.8c0,9.426,7.641,17.067,17.067,17.067h136.533\n\t\t\tc9.426,0,17.067-7.641,17.067-17.067V17.067C204.8,7.641,197.159,0,187.733,0z M170.667,443.733h-102.4v-409.6h102.4V443.733z\"/>\n                        </g>\n                    </g>\n                    <g>\n                        <g>\n                            <path d=\"M426.667,0H290.133c-9.426,0-17.067,7.641-17.067,17.067V460.8c0,9.426,7.641,17.067,17.067,17.067h136.533\n\t\t\tc9.426,0,17.067-7.641,17.067-17.067V17.067C443.733,7.641,436.092,0,426.667,0z M409.6,443.733H307.2v-409.6h102.4V443.733z\"/>\n                        </g>\n                    </g>\n                </svg>\n                :\n                <svg style={{ fill: '#007bff' }} className='h-8 w-auto' height=\"512\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                    viewBox=\"0 0 477.886 477.886\">\n                    <g>\n                        <g>\n                            <path d=\"M476.091,231.332c-1.654-3.318-4.343-6.008-7.662-7.662L24.695,1.804C16.264-2.41,6.013,1.01,1.8,9.442\n\t\t\tc-1.185,2.371-1.801,4.986-1.8,7.637v443.733c-0.004,9.426,7.633,17.07,17.059,17.075c2.651,0.001,5.266-0.615,7.637-1.8\n\t\t\tL468.429,254.22C476.865,250.015,480.295,239.768,476.091,231.332z M34.133,433.198V44.692l388.506,194.253L34.133,433.198z\"/>\n                        </g>\n                    </g>\n                </svg>\n            }\n        </div>\n    )\n}\n\nexport default PlayButton\nexport { PlayButton }\n","import React from \"react\";\n\nfunction LoopButton(props) {\n  const { looping = false, onChange = () => {} } = props;\n  return (\n    <div className='cursor-pointer'\n      onClick={() => {\n        onChange(!looping);\n      }}\n    >\n      {looping ? (\n        <svg\n          className=\"h-8 w-auto\"\n          style={{ fill: \"#007bff\" }}\n          id=\"Layer\"\n          enableBackground=\"new 0 0 64 64\"\n          height=\"512\"\n          viewBox=\"0 0 64 64\"\n          width=\"512\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"m19 25h9c1.104 0 2-.896 2-2s-.896-2-2-2h-9c-6.065 0-11 4.935-11 11s4.935 11 11 11h4.172l-1.586 1.586c-.781.781-.781 2.047 0 2.828.391.391.902.586 1.414.586s1.023-.195 1.414-.586l5-5c.781-.781.781-2.047 0-2.828l-5-5c-.781-.781-2.047-.781-2.828 0s-.781 2.047 0 2.828l1.586 1.586h-4.172c-3.859 0-7-3.141-7-7 0-3.86 3.141-7 7-7z\" />\n          <path d=\"m45 21h-4.172l1.586-1.586c.781-.781.781-2.047 0-2.828s-2.047-.781-2.828 0l-5 5c-.781.781-.781 2.047 0 2.828l5 5c.391.391.902.586 1.414.586s1.023-.195 1.414-.586c.781-.781.781-2.047 0-2.828l-1.586-1.586h4.172c3.859 0 7 3.14 7 7 0 3.859-3.141 7-7 7h-9c-1.104 0-2 .896-2 2s.896 2 2 2h9c6.065 0 11-4.935 11-11s-4.935-11-11-11z\" />\n        </svg>\n      ) : (\n        <svg\n          className=\"h-8 w-auto\"\n          style={{ fill: \" #dadada\" }}\n          id=\"Layer\"\n          enableBackground=\"new 0 0 64 64\"\n          height=\"512\"\n          viewBox=\"0 0 64 64\"\n          width=\"512\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"m19 25h9c1.104 0 2-.896 2-2s-.896-2-2-2h-9c-6.065 0-11 4.935-11 11s4.935 11 11 11h4.172l-1.586 1.586c-.781.781-.781 2.047 0 2.828.391.391.902.586 1.414.586s1.023-.195 1.414-.586l5-5c.781-.781.781-2.047 0-2.828l-5-5c-.781-.781-2.047-.781-2.828 0s-.781 2.047 0 2.828l1.586 1.586h-4.172c-3.859 0-7-3.141-7-7 0-3.86 3.141-7 7-7z\" />\n          <path d=\"m45 21h-4.172l1.586-1.586c.781-.781.781-2.047 0-2.828s-2.047-.781-2.828 0l-5 5c-.781.781-.781 2.047 0 2.828l5 5c.391.391.902.586 1.414.586s1.023-.195 1.414-.586c.781-.781.781-2.047 0-2.828l-1.586-1.586h4.172c3.859 0 7 3.14 7 7 0 3.859-3.141 7-7 7h-9c-1.104 0-2 .896-2 2s.896 2 2 2h9c6.065 0 11-4.935 11-11s-4.935-11-11-11z\" />\n        </svg>\n      )}\n    </div>\n  );\n}\n\nexport default LoopButton;\nexport { LoopButton };\n","import React from 'react'\n\nfunction StopButton(props) {\n    const { isStopped, onChange = () => { } } = props\n    return (\n        <div className='cursor-pointer' onClick={() => onChange(!isStopped)}>\n            {isStopped\n                ? <div className='mx-2 h-auto my-1' style={{ width: '2rem' }}>\n                    <svg style={{ fill: '#dadada' }} className='h-8 w-auto' id=\"Capa_1\" enableBackground=\"new 0 0 512 512\" height=\"512\" viewBox=\"0 0 512 512\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m256 0c-141.159 0-256 114.841-256 256s114.841 256 256 256 256-114.841 256-256-114.841-256-256-256zm115 356c0 8.284-6.716 15-15 15h-200c-8.284 0-15-6.716-15-15v-200c0-8.284 6.716-15 15-15h200c8.284 0 15 6.716 15 15z\" /><path d=\"m171 171h170v170h-170z\" /></g></svg>\n                </div>\n                : <div className='mx-2 h-auto my-1' style={{ width: '2rem' }} >\n                    <svg className='h-8 w-auto' style={{ fill: '#007bff' }} id=\"Capa_1\" enableBackground=\"new 0 0 512 512\" height=\"512\" viewBox=\"0 0 512 512\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m256 0c-141.159 0-256 114.841-256 256s114.841 256 256 256 256-114.841 256-256-114.841-256-256-256zm115 356c0 8.284-6.716 15-15 15h-200c-8.284 0-15-6.716-15-15v-200c0-8.284 6.716-15 15-15h200c8.284 0 15 6.716 15 15z\" /><path d=\"m171 171h170v170h-170z\" /></g></svg>\n                </div>}\n        </div>\n    )\n}\n\nexport default StopButton\nexport { StopButton }\n","import { Eventjs } from \"./event\"\n\nclass CountdownTimer extends Eventjs {\n    intervalId: number\n    constructor() {\n        super('tick', 'finished')\n        this.intervalId = -1\n    }\n\n    play(time: number) {\n        this.stop()\n\n        let start = Date.now(),\n            diff\n        const timer = () => {\n            // get the number of seconds that have elapsed since \n            // startTimer() was called\n            diff = time - (((Date.now() - start) / 1000) | 0);\n\n            // does the same job as parseInt truncates the float\n            // minutes = (diff / 60) | 0;\n            // seconds = (diff % 60) | 0;\n\n            // minutes = minutes < 10 ? \"0\" + minutes : minutes;\n            // seconds = seconds < 10 ? \"0\" + seconds : seconds;\n            this.trigger('tick', diff)\n            if (diff <= 0) {\n                // add one second so that the count down starts at the full duration\n                // example 05:00 not 04:59\n                start = Date.now() + 1000;\n                this.stop()\n\n                this.trigger('finished')\n            }\n        };\n        // we don't want to wait a full second before the timer starts\n        timer();\n        this.intervalId = window.setInterval(timer, 1000);\n\n\n    }\n\n    stop() {\n        clearInterval(this.intervalId)\n    }\n\n}\n\nexport default CountdownTimer","/**\n * Creates an event manager object. This function can be called with or without \"new\" keyword.\n * If it is called with \"new\", the resulting object can be used stand alone or attached to another object.\n * If it is called without \"new\", the target object should be passed as a parameter.\n * Eventjs attaches three functions to its target:\n *   on(), off(), trigger()\n * The parameters can be string or object. Strings represent event names and object represents the object that is\n * applied to the event listeners as their 'this'\n * Duplicate event strings are allowed though it doesn't have any useful application!\n * Duplicate target objects is allowed too. The last one will be set as the target.\n * If no target object is specified, the listener functions will be called with their 'this' set to the current instance\n * of eventjs object.\n * @throws TypeError if any of the variables has a type other than string or object\n * @throws Error if there is no event name strings in the parameter\n * @throws ReferenceError if this instance is not created with the 'new' keyword and no object is passed as the target\n * @constructor\n */\n/**\n * Creates an event manager object. This function can be called with or without \"new\" keyword.\n * If it is called with \"new\", the resulting object can be used stand alone or attached to another object.\n * If it is called without \"new\", the target object should be passed as a parameter.\n * Eventjs attaches three functions to its target:\n *   on(), off(), trigger()\n * The parameters can be string or object. Strings represent event names and object represents the object that is\n * applied to the event listeners as their 'this'\n * Duplicate event strings are allowed though it doesn't have any useful application!\n * Duplicate target objects is allowed too. The last one will be set as the target.\n * If no target object is specified, the listener functions will be called with their 'this' set to the current instance\n * of eventjs object.\n * @throws TypeError if any of the variables has a type other than string or object\n * @throws Error if there is no event name strings in the parameter\n * @throws ReferenceError if this instance is not created with the 'new' keyword and no object is passed as the target\n * @constructor\n */\nexport class Eventjs {\n    constructor( /* list of at least event names and one optional target object (in any order) */) {\n        var events = {};\n        var target = this;\n        var numEventNames = 0;\n        for (var i = 0; i < arguments.length; i++) {\n            var arg = arguments[i];\n            switch (typeof arg) {\n                case 'string':\n                    events[arg] = [ /*list of event listeners */];\n                    numEventNames++;\n                    break;\n                case 'object':\n                    target = arg; // 'this' for the listeners\n                    break;\n                default:\n                    throw new TypeError('Eventjs() only accepts string and object parameters');\n                    \n            }\n        }\n\n        if (numEventNames === 0) {\n            throw new Error('There should be at least one event name (string) for the Eventjs to be useful.');\n        }\n\n        if ((target === this) && !(this instanceof Eventjs)) {\n            throw new ReferenceError('Eventjs is not called with \"new\" keyword and no parameter of type object is passed to it');\n        }\n\n        /**\n         * if there is no such event, throw an exception\n         * @throws ReferenceError if the event name is not registered in this handler when this Eventjs object was created\n         */\n        function checkEventName(eventName) {\n            \n            if (typeof eventName !== 'string' || !events[eventName]) {\n                throw new ReferenceError('The event name does not exist in this event manager: ' + eventName);\n            }\n            return true;\n        }\n\n        /**\n         * registers an event listener\n         */\n        target.on = function (eventName /*, one or more listeners... */) {\n            \n            checkEventName(eventName);\n            //add every handler to the list of events for this particular event name\n            for (var i = 1; i < arguments.length; i++) {\n                var listener = arguments[i];\n                //if this handler doesn't already exist in the list add it\n                if (events[eventName].indexOf(listener) === -1) {\n                    events[eventName].push(listener);\n                }\n            }\n            return this;\n        };\n\n        /**\n         * un-register a handler from an event name. if handler is missing, all handlers will be removed\n         */\n        target.off = function (eventName /*, one or more listeners... */) {\n            \n            switch (arguments.length) {\n                case 0: //no event name specified. remove all event listeners\n                    for (var iEventName in events) {\n                        if (events.hasOwnProperty(iEventName)) {\n                            target.off(iEventName);\n                        }\n                    }\n                    break;\n                case 1: //only the event name specified. remove all event listeners for this particular event\n                    checkEventName(eventName);\n                    events[eventName].length = 0;\n                    break;\n                default: //remove the specified event listeners for the specified event name\n                    checkEventName(eventName);\n                    //add every handler to the list of events for this particular event name\n                    for (var i = 1; i < arguments.length; i++) {\n                        var currListener = arguments[i];\n                        //if this handler doesn't already exist in the list add it\n                        var currHandlerIndex = events[eventName].indexOf(currListener);\n                        if (currHandlerIndex !== -1) {\n                            events[eventName].splice(currHandlerIndex, 1);\n                        }\n                    }\n                    break;\n            }\n            return this;\n        };\n\n        /**\n         * triggers a handler with a list of arguments. Any argument to the event handler can follow the eventName.\n         * If an error prevents a listener from running, the other\n         * listeners will run anyway. After the execution is complete, the trigger() function throws an array containing\n         * information about those errors.\n         * @throws Error if any of the event listeners was interrupted with an exception. The resulting error object has a\n         *         errors property which can be used to investigate the details of the errors.\n         *         It is an array of array of exception objects which give information about which listener was interrupted\n         *         with an exception. Each element of this array contains a 'listener' and an 'error' key.\n         */\n        target.trigger = function (eventName /*, optional list of arguments to be passed to event handler */) {\n            \n            checkEventName(eventName);\n            var argumentList = [];\n            //add all the arguments after the first argument to this list (firs argument is the eventName)\n            for (var i = 1; i < arguments.length; i++) {\n                argumentList.push(arguments[i]);\n            }\n            var listeners = events[eventName];\n            var errors = [];\n            //now run the events that are explicityly registered with this event manager\n            for (var j = 0; j < listeners.length; j++) {\n                var lis = listeners[j];\n                try {\n                    lis.apply(target, argumentList);\n                } catch (e) {\n                    errors.push({\n                        listener: lis,\n                        error: e\n                    });\n                }\n            }\n            if (errors.length > 0) {\n                var newError = new Error('At least one of the event listeners was interrupted with an error. See errors');\n                console.log(errors)\n                newError.errors = errors;\n                throw newError;\n            }\n            return this;\n        };\n\n        return target;\n    }\n}","function showNotification(title) {\r\n  if (!(\"Notification\" in window)) {\r\n    alert(\"This browser does not support desktop notification\");\r\n  }\r\n\r\n  // Let's check whether notification permissions have already been granted\r\n  else if (Notification.permission === \"granted\") {\r\n    // If it's okay let's create a notification\r\n    return createNotfication(title);\r\n  }\r\n\r\n  // Otherwise, we need to ask the user for permission\r\n  else if (Notification.permission !== \"denied\") {\r\n    Notification.requestPermission().then(function (permission) {\r\n      // If the user accepts, let's create a notification\r\n      if (permission === \"granted\") {\r\n        return createNotfication(title);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction createNotfication(title) {\r\n  try {\r\n    return new Notification(title);\r\n  } catch (error) {\r\n    console.log(error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default showNotification;\r\n","import { useRef, useState } from \"react\";\r\nimport { Howl } from \"howler\";\r\nexport default function useSoundPlayer() {\r\n  const [playerId, setPlayerId] = useState<number>(-1);\r\n  const playerRef = useRef<Howl | null>(null);\r\n\r\n  function play(sound: string, time?: number) {\r\n    playerRef.current = new Howl({ src: [sound], format: [\"webm\"] });\r\n    const handleId = playerRef.current.play();\r\n    if (time) {\r\n      setTimeout(() => {\r\n        if (!playerRef.current) return;\r\n        playerRef.current.stop(handleId);\r\n      }, time * 1000);\r\n    }\r\n    setPlayerId(handleId);\r\n  }\r\n\r\n  function pause() {\r\n    if (!playerRef.current) return;\r\n    playerRef.current.pause(playerId);\r\n  }\r\n\r\n  function stop() {\r\n    if (!playerRef.current) return;\r\n    playerRef.current.stop(playerId);\r\n  }\r\n\r\n  return { play, pause, stop };\r\n}\r\n","import localforage from \"localforage\";\r\nlocalforage.setDriver([localforage.INDEXEDDB, localforage.LOCALSTORAGE]);\r\nconst getItem = async <T>(key: string): Promise<T | null> => {\r\n  return await localforage.getItem(key);\r\n};\r\n\r\nconst setItem = (key: string, data: { [key: string]: any }) => {\r\n  return localforage.setItem(key, data);\r\n};\r\n\r\nconst removeItem = (key: string) => {\r\n  return localforage.removeItem(key);\r\n};\r\n\r\nconst ls = { getItem, setItem, removeItem };\r\n\r\nexport { ls as localStorage };\r\n","import { useState } from \"react\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\nimport { localStorage } from \"../utils/localStorage\";\r\n\r\nexport type Timer = { id: string; name: string; time: number };\r\nexport type TimerStore = {\r\n  [id: string]: Timer;\r\n};\r\n\r\nexport default function useTimerStore() {\r\n  const [timerStore, setTimerStore] = useState<TimerStore>({});\r\n\r\n  const createTimer = (name: string, time: number): Timer => {\r\n    const id = uuidv1();\r\n    return { id: id, name: name, time: time };\r\n  };\r\n\r\n  function addTimer(name: string, time: number): Timer {\r\n    const newTimer = createTimer(name, time);\r\n    setTimerStore({ ...timerStore, [newTimer.id]: newTimer });\r\n    saveTimerToStorage(newTimer);\r\n    return newTimer;\r\n  }\r\n  function getTimer(id: string): Timer {\r\n    const timer = timerStore[id];\r\n    return timer;\r\n  }\r\n  function deleteTimer(id: string) {\r\n    const newTimerStore = { ...timerStore };\r\n    delete newTimerStore[id];\r\n    deleteTimeFromStorage(id);\r\n    setTimerStore(newTimerStore);\r\n  }\r\n\r\n  async function loadTimerFromStorage(id: string) {\r\n    const timer = await localStorage.getItem<Timer>(id);\r\n    if (!timer) return null;\r\n    return timer;\r\n  }\r\n\r\n  function saveTimerToStorage(timer: Timer) {\r\n    localStorage.setItem(timer.id, timer);\r\n  }\r\n\r\n  function deleteTimeFromStorage(id: string) {\r\n    localStorage.removeItem(id);\r\n  }\r\n\r\n  async function init(timerIdList: string[]) {\r\n    const timerStore: TimerStore = {};\r\n    const promises: any[] = [];\r\n    timerIdList.forEach((id) => {\r\n      promises.push(\r\n        loadTimerFromStorage(id).then((timer) => {\r\n          if (timer) timerStore[id] = timer;\r\n        })\r\n      );\r\n    });\r\n    await Promise.all(promises);\r\n    setTimerStore(timerStore);\r\n    return timerStore;\r\n  }\r\n\r\n  function updateTimer(id: string, opts: { name?: string; time?: number }) {\r\n    const newTimerStore = { ...timerStore };\r\n    newTimerStore[id].name = opts.name || newTimerStore[id].name;\r\n    newTimerStore[id].time = opts.time || newTimerStore[id].time;\r\n    saveTimerToStorage(newTimerStore[id]);\r\n    setTimerStore(newTimerStore);\r\n  }\r\n\r\n  return {\r\n    init,\r\n    addTimer,\r\n    getTimer,\r\n    deleteTimer,\r\n    updateTimer,\r\n    timerStore,\r\n  };\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { localStorage } from \"../utils/localStorage\";\r\nimport useTimerStore from \"./useTimerStore\";\r\n\r\ntype TimerGroupStore = {\r\n  id: string;\r\n  name: string;\r\n  timers: string[];\r\n};\r\n\r\nexport default function useTimerGroup(id: string, name = \"unname\") {\r\n  const [timerGroupStore, setTimerGroupStore] = useState<TimerGroupStore>({\r\n    id: id,\r\n    name: name,\r\n    timers: [],\r\n  });\r\n  //   const [timerStore, setTimerStore] = useState<TimerStore>({});\r\n  const {\r\n    init,\r\n    addTimer,\r\n    getTimer,\r\n    deleteTimer,\r\n    updateTimer,\r\n    timerStore,\r\n  } = useTimerStore();\r\n\r\n  //get localstorage data if any\r\n  useEffect(() => {\r\n    if (!id) return;\r\n    loadTimerGroupFromLocalStorage(id).then((savedTimerGroupStoreData) => {\r\n      if (!savedTimerGroupStoreData) return;\r\n      const timersList = savedTimerGroupStoreData.timers;\r\n\r\n      init(timersList).then(() => {\r\n        setTimerGroupStore(savedTimerGroupStoreData);\r\n      });\r\n    });\r\n  }, [id]);\r\n\r\n  const saveTimerGroupToLocalStorage = (timerGroup: TimerGroupStore) => {\r\n    localStorage.setItem(timerGroup.id, timerGroup);\r\n  };\r\n\r\n  const deleteTimerGroupFromLocalStorage = (timerGroup: TimerGroupStore) => {\r\n    localStorage.removeItem(timerGroup.id);\r\n  };\r\n\r\n  const loadTimerGroupFromLocalStorage = async (\r\n    id: string\r\n  ): Promise<TimerGroupStore | null> => {\r\n    const timerGroup = await localStorage.getItem<TimerGroupStore>(id);\r\n    return timerGroup;\r\n  };\r\n\r\n  function addTimerInGroup(name: string, time: number) {\r\n    const newTimer = addTimer(name, time);\r\n    const newTimerGroups: TimerGroupStore = { ...timerGroupStore };\r\n    newTimerGroups.timers.push(newTimer.id);\r\n    saveTimerGroupToLocalStorage(newTimerGroups);\r\n    setTimerGroupStore(newTimerGroups);\r\n    return newTimerGroups;\r\n  }\r\n\r\n  function deleteTimerFromGroup(timerId: string) {\r\n    const newTimerGroupsStore = { ...timerGroupStore };\r\n    const newTimerList = newTimerGroupsStore.timers.filter(\r\n      (_timerId) => _timerId !== timerId\r\n    );\r\n    if (newTimerList.length !== newTimerGroupsStore.timers.length)\r\n      deleteTimer(timerId);\r\n    newTimerGroupsStore.timers = newTimerList;\r\n    saveTimerGroupToLocalStorage(newTimerGroupsStore);\r\n    setTimerGroupStore(newTimerGroupsStore);\r\n    return newTimerGroupsStore;\r\n  }\r\n\r\n  function deleteTimerGroup() {\r\n    const timersList = timerGroupStore.timers;\r\n    timersList.forEach((timerId: string) => {\r\n      deleteTimer(timerId);\r\n    });\r\n    deleteTimerGroupFromLocalStorage(timerGroupStore);\r\n  }\r\n\r\n  function changeGroupName(newName: string) {\r\n    if (!newName) return;\r\n    setTimerGroupStore({ ...timerGroupStore, name: newName });\r\n    saveTimerGroupToLocalStorage({\r\n      ...timerGroupStore,\r\n      name: newName,\r\n    });\r\n  }\r\n\r\n  return {\r\n    addTimerInGroup,\r\n    deleteTimerFromGroup,\r\n    deleteTimerGroup,\r\n    changeGroupName,\r\n    timerGroupStore,\r\n    updateTimer,\r\n    getTimer,\r\n    timerStore,\r\n  };\r\n}\r\n","export default __webpack_public_path__ + \"static/media/alarm.4ef57659.mp3\";","import { useCallback, useRef, useState } from \"react\";\r\n\r\nexport default function useAudioRecorder() {\r\n  const mediaStream = useRef<MediaStream | null>(null);\r\n  const mediaRecorder = useRef<MediaRecorder | null>(null);\r\n  const mediaChunks = useRef<Blob[]>([]);\r\n\r\n  const [audioBlob, setAudioBlob] = useState<Blob>();\r\n\r\n  async function record() {\r\n    mediaStream.current = await window.navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n      video: false,\r\n    });\r\n\r\n    mediaChunks.current = [];\r\n    mediaRecorder.current = new MediaRecorder(mediaStream.current, {\r\n      mimeType: \"audio/webm\",\r\n    });\r\n\r\n    mediaRecorder.current.addEventListener(\"dataavailable\", function (e) {\r\n      if (e.data.size > 0) {\r\n        mediaChunks.current.push(e.data);\r\n      }\r\n    });\r\n\r\n    mediaRecorder.current.addEventListener(\"stop\", function (e) {\r\n      if (!mediaChunks.current) return;\r\n      let [sampleChunk] = mediaChunks.current;\r\n      setAudioBlob(new Blob(mediaChunks.current, { type: sampleChunk.type }));\r\n    });\r\n\r\n    mediaRecorder.current.start(100);\r\n  }\r\n\r\n  const stopRecording = function () {\r\n    if (mediaRecorder.current) {\r\n      mediaRecorder.current.stop();\r\n      mediaRecorder.current = null;\r\n    }\r\n\r\n    if (mediaStream.current) {\r\n      mediaStream.current.getTracks().forEach((track) => track.stop());\r\n      mediaStream.current = null;\r\n    }\r\n\r\n    const [sameplChunk] = mediaChunks.current;\r\n    return new Blob(mediaChunks.current, { type: sameplChunk.type });\r\n  };\r\n\r\n  return { record, stopRecording, audioBlob };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Timer from \"../timer/Timer\";\r\nimport close from \"./close.svg\";\r\n\r\nimport { PlayButton } from \"./playButton\";\r\nimport { LoopButton } from \"./loopButton\";\r\nimport StopButton from \"./stopButton\";\r\n\r\nimport useTimerCard from \"../../hooks/useTimerCards\";\r\nimport useAudioRecorder from \"../../hooks/useAudioRecorder\";\r\n\r\nexport default function TimerCard(props) {\r\n  const { onDelete, timerCardId } = props;\r\n  const { ...timerCard } = useTimerCard(props.timerCardId);\r\n  const [editTitle, setEditTitle] = useState(() => false);\r\n  const { record, stopRecording, audioBlob } = useAudioRecorder();\r\n\r\n  return (\r\n    <div className=\"mx-4 my-1 bg-white elevation-2 rounded-lg\">\r\n      <div\r\n        className=\"p-2 border rounded-lg border-gray-300\"\r\n        style={{\r\n          width: \"25%\",\r\n          minWidth: \"265px\",\r\n          maxWidth: \"265px\",\r\n        }}\r\n      >\r\n        <div className=\"flex flex-row-reverse\">\r\n          <button\r\n            className=\"select-none outline-none rounded-full transition duration-150 hover:elevation-2 transform hover:scale-110\"\r\n            // className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              timerCard.deleteTimerCard();\r\n              onDelete(timerCardId);\r\n            }}\r\n          >\r\n            <img className=\"h-6 w-auto\" src={close} />\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <div className=\"text-7xl font-mono tracking-tighter font-medium text-center select-none\">\r\n            {parseInt(timerCard.runningTimer.remainingTime / 60) <= 9\r\n              ? \"0\" + parseInt(timerCard.runningTimer.remainingTime / 60)\r\n              : parseInt(timerCard.runningTimer.remainingTime / 60)}\r\n            :\r\n            {timerCard.runningTimer.remainingTime % 60 <= 9\r\n              ? \"0\" + (timerCard.runningTimer.remainingTime % 60)\r\n              : timerCard.runningTimer.remainingTime % 60}\r\n          </div>\r\n          <hr />\r\n          <div className=\"flex flex-row justify-between mx-2\">\r\n            <div className=\"text-center font-medium cursor-pointer\">\r\n              <div onClick={() => setEditTitle(true)}>\r\n                {editTitle ? (\r\n                  <form\r\n                    onSubmit={(event) => {\r\n                      event.preventDefault();\r\n                      const title = event.currentTarget.title.value;\r\n                      if (title) {\r\n                        timerCard.changeTimerCardName(title);\r\n                      }\r\n                      setEditTitle(false);\r\n                    }}\r\n                    onBlur={(event) => {\r\n                      event.preventDefault();\r\n                      const title = event.currentTarget.title.value;\r\n                      if (title) {\r\n                        timerCard.changeTimerCardName(title);\r\n                      }\r\n                      setEditTitle(false);\r\n                    }}\r\n                  >\r\n                    <input autoFocus type=\"text\" name=\"title\" />\r\n                  </form>\r\n                ) : (\r\n                  timerCard.timerCardData.name\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"px-0 user-select-none\">\r\n              <LoopButton\r\n                looping={timerCard.timerCardData.looping}\r\n                onChange={() => timerCard.toggleLooping()}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex\">\r\n            <div className=\" mx-2 h-8 w-auto my-1\">\r\n              <PlayButton\r\n                isPlaying={timerCard.timerCardData.status === \"playing\"}\r\n                onChange={(state) => {\r\n                  const action = state\r\n                    ? timerCard.playCard\r\n                    : timerCard.pausecard;\r\n                  action();\r\n                }}\r\n              />\r\n            </div>\r\n            <StopButton\r\n              isStopped={timerCard.timerCardData.status === \"stopped\"}\r\n              onChange={(isStopped) => {\r\n                if (isStopped) timerCard.stopCard();\r\n              }}\r\n            />\r\n          </div>\r\n          {timerCard.timerCardData.timers.map((timerId) => {\r\n            const timer = timerCard.timerStore[timerId];\r\n            return (\r\n              <Timer\r\n                key={timer.id}\r\n                id={timer.id}\r\n                active={timerCard.runningTimer?.currentTimerId === timer?.id}\r\n                onDelete={(timerId) => {\r\n                  timerCard.removeTimer(timerId);\r\n                }}\r\n                onNameChange={(newName) =>\r\n                  timerCard.changeTimerName(timerId, newName)\r\n                }\r\n                onTimeChange={(newTime) =>\r\n                  timerCard.chanageTimerTime(timerId, newTime)\r\n                }\r\n                name={timer.name}\r\n                time={timer.time}\r\n                onRecordStart={() => {\r\n                  record();\r\n                }}\r\n                onRecordStop={() => {\r\n                  const audioBlob = stopRecording();\r\n                  timerCard.addSound(timerId, audioBlob);\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n          <div className=\"flex justify-center mt-4\">\r\n            <button\r\n              className=\" bg-blue-600 px-4 py-1 rounded-md text-white select-none transition duration-150 hover:elevation-4 transform hover:scale-110 hover:bg-blue-700\"\r\n              onClick={() => {\r\n                timerCard.addTimer(\"unaname\", 300);\r\n              }}\r\n            >\r\n              Add Timer\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport CountdownTimer from \"../lib/countdownTimer\";\r\nimport showNotification from \"../utils/notification\";\r\nimport useSoundPlayer from \"./useSoundPlayer\";\r\nimport useTimerGroup from \"./useTimerGroup\";\r\n//@ts-ignore\r\nimport defaultSound from \"./alarm.mp3\";\r\nimport { localStorage } from \"../utils/localStorage\";\r\n\r\nexport default function useTimerCard(id: string, name = \"Unnamed\") {\r\n  const { timerGroupStore, timerStore, ...timerGroup } = useTimerGroup(\r\n    id,\r\n    name\r\n  );\r\n  const [timerCardData, setTimerCardData] = useState({\r\n    looping: false,\r\n    status: \"stopped\",\r\n    alarmSound: {},\r\n  });\r\n  const [runningTimer, setRunningTimer] = useState({\r\n    currentTimerId: \"\",\r\n    remainingTime: 0,\r\n    time: 0,\r\n  });\r\n  const countdownTimerRef = useRef(new CountdownTimer());\r\n  const [onTimerFinished, setOnTimerFinished] = useState(false); //everytime var change it value from false to true next timer is played if constraints satisfied\r\n  const runningTimerRef = useRef(runningTimer); //only used for purpose of storing data to save it later in localstorage\r\n  const timerCardDataRef = useRef(timerCardData); //only used when storing data to local storage\r\n  const customSoundsRef = useRef<{ [timerId in string]: Blob[] }>({});\r\n  const { play, pause, stop } = useSoundPlayer();\r\n  //to save running timer data before it is closed\r\n  useEffect(() => {\r\n    if (!id) return;\r\n    const onPageHide = async () => {\r\n      await localStorage.setItem(\r\n        \"runningTimerData\" + id,\r\n        runningTimerRef.current\r\n      );\r\n      await localStorage.setItem(\r\n        \"timerCardData\" + id,\r\n        timerCardDataRef.current\r\n      );\r\n      console.log(customSoundsRef.current);\r\n      await localStorage.setItem(\"customSound\" + id, customSoundsRef.current);\r\n    };\r\n    window.addEventListener(\"beforeunload\", onPageHide);\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", onPageHide);\r\n    };\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    const onTick = (remainingTime: number) => {\r\n      setRunningTimer(({ ...runningTimerData }): any => {\r\n        const newData = { ...runningTimerData, remainingTime: remainingTime };\r\n        return newData;\r\n      });\r\n    };\r\n    const countdownTimer = countdownTimerRef.current;\r\n    countdownTimer.on(\"tick\", onTick);\r\n\r\n    return () => {\r\n      countdownTimer.off(\"tick\", onTick);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    runningTimerRef.current = runningTimer;\r\n  }, [runningTimer]);\r\n\r\n  useEffect(() => {\r\n    timerCardDataRef.current = {\r\n      ...timerCardData,\r\n      status: timerCardData.status === \"stopped\" ? \"stopped\" : \"paused\",\r\n    };\r\n  }, [timerCardData]);\r\n\r\n  useEffect(() => {\r\n    if (!onTimerFinished) return;\r\n\r\n    const timerList = timerGroupStore.timers;\r\n    const indexofFinishedTimer = timerList.indexOf(runningTimer.currentTimerId);\r\n    let nextTimer = timerStore[timerList[indexofFinishedTimer + 1]];\r\n    //to check wheter last timer\r\n    if (!nextTimer) {\r\n      //if looping is disabled change status to stopped and do noting\r\n      if (timerCardData.looping === false) {\r\n        setTimerCardData({ ...timerCardData, status: \"stopped\" });\r\n        setRunningTimer({\r\n          ...runningTimer,\r\n          remainingTime: 0,\r\n          currentTimerId: \"\",\r\n        });\r\n        setOnTimerFinished(false);\r\n        return;\r\n      }\r\n\r\n      //get the first timer and set it as running timer\r\n      nextTimer = timerStore[timerList[0]];\r\n\r\n      setRunningTimer({\r\n        currentTimerId: nextTimer.id,\r\n        remainingTime: nextTimer.time,\r\n        time: nextTimer.time,\r\n      });\r\n    }\r\n    setRunningTimer({\r\n      currentTimerId: nextTimer.id,\r\n      remainingTime: nextTimer.time,\r\n      time: nextTimer.time,\r\n    });\r\n\r\n    playCard(nextTimer.id);\r\n    setOnTimerFinished(false);\r\n\r\n    return () => {};\r\n  }, [onTimerFinished]);\r\n\r\n  const loadTimerCardDataFromStorage = useCallback(async () => {\r\n    return await localStorage.getItem(\"timerCardData\" + id);\r\n  }, [id]);\r\n\r\n  const loadRunningTimerDataFromStorage = useCallback(async () => {\r\n    return await localStorage.getItem(\"runningTimerData\" + id);\r\n  }, [id]);\r\n\r\n  const loadCustomSoundFromStorage = async () => {\r\n    return await localStorage.getItem(\"customSound\" + id);\r\n  };\r\n\r\n  const initTimerCard = useCallback(async () => {\r\n    const parsedTimerCardData = await loadTimerCardDataFromStorage();\r\n    if (parsedTimerCardData) {\r\n      //@ts-ignore\r\n      setTimerCardData(parsedTimerCardData);\r\n    }\r\n\r\n    const parsedRunningTimerData = await loadRunningTimerDataFromStorage();\r\n    if (parsedRunningTimerData) {\r\n      //@ts-ignore\r\n      setRunningTimer(parsedRunningTimerData);\r\n    }\r\n\r\n    const customSoundData = await loadCustomSoundFromStorage();\r\n    if (customSoundData) {\r\n      customSoundsRef.current = customSoundData as {\r\n        [x: string]: Blob[];\r\n      };\r\n    }\r\n  }, [loadRunningTimerDataFromStorage, loadTimerCardDataFromStorage]);\r\n\r\n  useEffect(() => {\r\n    initTimerCard();\r\n  }, [initTimerCard]);\r\n\r\n  const playCard = (currentTimerId = \"\") => {\r\n    currentTimerId =\r\n      currentTimerId || ((runningTimer.currentTimerId as unknown) as string);\r\n\r\n    //no currentTimerid might mean its first time playing\r\n    if (!currentTimerId) {\r\n      currentTimerId = timerGroupStore.timers[0] as string;\r\n      //if index 0 does not have current timer id it means card does not have timer hence do nothing\r\n      if (!currentTimerId) return;\r\n    }\r\n    const timerData = timerStore[currentTimerId];\r\n    //in off chance if currenttimerId is invalid do nothing\r\n    if (!timerData) return;\r\n\r\n    setRunningTimer({ ...runningTimer, currentTimerId: currentTimerId });\r\n    countdownTimerRef.current.off(\"finished\");\r\n    if (timerCardData.status === \"paused\") {\r\n      countdownTimerRef.current.play(runningTimer.remainingTime);\r\n    } else {\r\n      countdownTimerRef.current.play(timerData.time);\r\n    }\r\n    setTimerCardData({ ...timerCardData, status: \"playing\" });\r\n\r\n    countdownTimerRef.current.on(\"finished\", () => {\r\n      showNotification(\r\n        `${timerGroupStore.name} => ${timerData.name} | completed`\r\n      );\r\n\r\n      if (customSoundsRef.current[timerData.id]) {\r\n        const soundObjectUrl = URL.createObjectURL(\r\n          customSoundsRef.current[timerData.id]\r\n        );\r\n        play(soundObjectUrl);\r\n      } else {\r\n        play(defaultSound, 2);\r\n      }\r\n\r\n      setOnTimerFinished(true);\r\n    });\r\n  };\r\n\r\n  const pausecard = () => {\r\n    setTimerCardData({ ...timerCardData, status: \"paused\" });\r\n    countdownTimerRef.current.stop();\r\n  };\r\n\r\n  const stopCard = () => {\r\n    countdownTimerRef.current.stop();\r\n    setTimerCardData({ ...timerCardData, status: \"stopped\" });\r\n    setRunningTimer({ ...runningTimer, remainingTime: 0, currentTimerId: \"\" });\r\n  };\r\n\r\n  const toggleLooping = () => {\r\n    const newTimerCardData = {\r\n      ...timerCardData,\r\n      looping: !timerCardData.looping,\r\n    };\r\n    setTimerCardData(newTimerCardData);\r\n    localStorage.setItem(\"timerCardData\" + id, newTimerCardData);\r\n  };\r\n\r\n  const deleteTimerCard = () => {\r\n    timerGroup.deleteTimerGroup();\r\n    localStorage.removeItem(\"runningTimerData\" + id);\r\n    localStorage.removeItem(\"timerCardData\" + id);\r\n  };\r\n\r\n  const addTimer = (name: string, time: number) => {\r\n    timerGroup.addTimerInGroup(name, time);\r\n  };\r\n\r\n  const removeTimer = (timerId: string) => {\r\n    timerGroup.deleteTimerFromGroup(timerId);\r\n  };\r\n\r\n  const addSound = (timerId: string, audioBlob: Blob[]) => {\r\n    customSoundsRef.current[timerId] = audioBlob;\r\n  };\r\n\r\n  const changeTimerCardName = (newName: string) => {\r\n    timerGroup.changeGroupName(newName);\r\n  };\r\n  const changeTimerName = (timerId: string, newName: string) => {\r\n    timerGroup.updateTimer(timerId, { name: newName });\r\n  };\r\n  const chanageTimerTime = (timerId: string, newTime: number) => {\r\n    timerGroup.updateTimer(timerId, { time: newTime });\r\n  };\r\n\r\n  return {\r\n    addSound,\r\n    addTimer,\r\n    changeTimerCardName,\r\n    removeTimer,\r\n    chanageTimerTime,\r\n    changeTimerName,\r\n    deleteTimerCard,\r\n    playCard,\r\n    pausecard,\r\n    stopCard,\r\n    toggleLooping,\r\n    timerStore,\r\n    timerCardData: { ...timerGroupStore, ...timerCardData },\r\n    runningTimer,\r\n  };\r\n}\r\n","import { createContext, useContext } from \"react\";\r\n\r\nexport type audioContextType = {\r\n  audioStore: { [id in string]: Blob[] };\r\n  addAudio: (audioBlob: Blob[]) => string;\r\n};\r\n\r\nexport const AudioStoreContext = createContext<audioContextType>({\r\n  audioStore: {},\r\n  addAudio: (audioBlob) => {\r\n    return \"\";\r\n  },\r\n});\r\n// export const useTheme = () => useContext(AudioStoreContext);\r\n","import React, {\r\n  PropsWithChildren,\r\n  ReactChild,\r\n  ReactElement,\r\n  ReactNode,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport { AudioStoreContext, audioContextType } from \"../contexts/audioContext\";\r\n\r\nfunction AudioProvider(props: PropsWithChildren<{}>) {\r\n  const { children } = props;\r\n  const [audioStore, setAudioStore] = useState  <{ [id in string]: Blob[] }>({});\r\n\r\n  function addAudio(audioBlob: Blob[]) {\r\n    const id = v4();\r\n    setAudioStore({ ...audioStore, [id]: audioBlob });\r\n    return id;\r\n  }\r\n\r\n  return (\r\n    <AudioStoreContext.Provider\r\n      value={{ audioStore: audioStore, addAudio }}\r\n    >\r\n      {children}\r\n    </AudioStoreContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AudioProvider;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\nimport TimerCard from \"./component/timerCard/TimerCard\";\r\nimport useAudioRecorder from \"./hooks/useAudioRecorder\";\r\nimport AudioProvider from \"./providers/audioProvider\";\r\nimport { AudioStoreContext } from \"./contexts/audioContext\";\r\nimport { localStorage } from \"./utils/localStorage\";\r\n\r\nfunction App(props) {\r\n  const [timerCardsList, setTimerCardsList] = useState([]);\r\n  useEffect(() => {\r\n    localStorage.getItem(\"timerCardList\").then((savedTimerCardList) => {\r\n      if (savedTimerCardList) {\r\n        setTimerCardsList(JSON.parse(savedTimerCardList));\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"timerCardList\", JSON.stringify(timerCardsList));\r\n  }, [timerCardsList]);\r\n\r\n  useEffect(() => {\r\n    document.body.classList.remove(\"page-loading\");\r\n    document.body.classList.add(\"page-loaded\");\r\n    document.body.classList.add(\"bg-gray-50\");\r\n  }, []);\r\n  const { audioStore, addAudio } = useContext(AudioStoreContext);\r\n\r\n  const { record, stopRecording, audioBlob } = useAudioRecorder();\r\n  useEffect(() => {\r\n    if (audioBlob) {\r\n      addAudio(audioBlob);\r\n    }\r\n  }, [audioBlob]);\r\n  return (\r\n    <div>\r\n      <button\r\n        className=\"select-none bg-blue-600 text-white px-4 py-2 rounded-full\"\r\n        onClick={() => {\r\n          setTimerCardsList((prevTimerCardList) => [\r\n            ...prevTimerCardList,\r\n            uuidv1(),\r\n          ]);\r\n        }}\r\n      >\r\n        Add Timer Card\r\n      </button>\r\n\r\n      <div className=\"overflow-auto\">\r\n        <div className=\"flex\" style={{ alignItems: \"flex-start\" }}>\r\n          {timerCardsList.map((timerCardId) => (\r\n            <TimerCard\r\n              key={timerCardId}\r\n              timerCardId={timerCardId}\r\n              onDelete={(id) => {\r\n                setTimerCardsList((timerCardsList) =>\r\n                  timerCardsList.filter((timerId) => timerId !== id)\r\n                );\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nconst SoundPlayerContext = React.createContext('');\r\nexport default SoundPlayerContext;","import { ReactNode } from \"react\";\r\nimport React from \"react\";\r\nimport SoundPlayerContext from \"../contexts/SoundPlayerContext\";\r\n\r\ntype Props = {\r\n    children: ReactNode;\r\n};\r\nexport default function SoundPlayerProvider(props: Props) {\r\n    const { children } = props\r\n    return (\r\n        <SoundPlayerContext.Provider value={'Himanshu'}>\r\n            {children}\r\n        </SoundPlayerContext.Provider>\r\n    );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n    window.addEventListener('activate', function (event) {\n      event.waitUntil(\n        caches.keys().then(function (cacheNames) {\n          return Promise.all(\n            cacheNames.filter(function (cacheName) {\n              // Return true if you want to remove this cache,\n              // but remember that caches are shared across\n              // the whole origin\n            }).map(function (cacheName) {\n              return caches.delete(cacheName)\n            })\n          )\n        })\n      )\n    })\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport SoundPlayerProvider from \"./providers/SoundPlayerProvider\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\nimport AudioProvider from \"./providers/audioProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SoundPlayerProvider>\n      <AudioProvider>\n        <App />\n      </AudioProvider>\n    </SoundPlayerProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n"],"sourceRoot":""}